# Create component library
set(QUICC_CURRENT_SUBCOMPONENT_LIB Tracker)
add_library(${QUICC_CURRENT_COMPONENT_LIB}_${QUICC_CURRENT_SUBCOMPONENT_LIB} STATIC
  Tracker.cpp
  MemoryTracker.cpp)
target_include_directories(${QUICC_CURRENT_COMPONENT_LIB}_${QUICC_CURRENT_SUBCOMPONENT_LIB}
  PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/..)

if(TARGET QuICC::Cuda)
  target_link_libraries(${QUICC_CURRENT_COMPONENT_LIB}_${QUICC_CURRENT_SUBCOMPONENT_LIB}
    PRIVATE QuICC::Cuda)
endif()

target_link_libraries(${QUICC_CURRENT_COMPONENT_LIB}_${QUICC_CURRENT_SUBCOMPONENT_LIB}
  PRIVATE ${QUICC_NAMESPACE}${QUICC_CURRENT_COMPONENT_LIB_NAMESPACE}Timers)

# Sample size
if(NOT QUICC_PROFILE_NATIVE_SAMPLE)
  # otherwise for the test case it is set to empty
  set(QUICC_PROFILE_NATIVE_SAMPLE 100)
endif()
target_compile_definitions(${QUICC_CURRENT_COMPONENT_LIB}_${QUICC_CURRENT_SUBCOMPONENT_LIB}
  PUBLIC QUICC_PROFILE_NATIVE_SAMPLE=${QUICC_PROFILE_NATIVE_SAMPLE})

# Add MPI dependency
if(QUICC_USE_MPI)
  target_link_libraries(${QUICC_CURRENT_COMPONENT_LIB}_${QUICC_CURRENT_SUBCOMPONENT_LIB}
    PRIVATE MPI::MPI_CXX)
  target_compile_definitions(${QUICC_CURRENT_COMPONENT_LIB}_${QUICC_CURRENT_SUBCOMPONENT_LIB}
    PUBLIC QUICC_MPI)
endif()

# HighFive
if(QUICC_PROFILE_NATIVE_WRITER STREQUAL "HighFive")
  target_link_libraries(${QUICC_CURRENT_COMPONENT_LIB}_${QUICC_CURRENT_SUBCOMPONENT_LIB}
    PRIVATE
      HighFive)
  quicc_target_add_definition(${QUICC_CURRENT_COMPONENT_LIB}_${QUICC_CURRENT_SUBCOMPONENT_LIB}
    PRIVATE OPTION QUICC_PROFILE_NATIVE_WRITER)
endif()

# GitHash
target_link_libraries(${QUICC_CURRENT_COMPONENT_LIB}_${QUICC_CURRENT_SUBCOMPONENT_LIB}
  PRIVATE QuICC::Framework::GitHash)

# Alias
add_library(${QUICC_NAMESPACE}${QUICC_CURRENT_COMPONENT_LIB_NAMESPACE}${QUICC_CURRENT_SUBCOMPONENT_LIB}
  ALIAS ${QUICC_CURRENT_COMPONENT_LIB}_${QUICC_CURRENT_SUBCOMPONENT_LIB})

# Export info
if(QUICC_PROFILE_BACKEND STREQUAL "native")
  quicc_export_target(${QUICC_CURRENT_COMPONENT_LIB}_${QUICC_CURRENT_SUBCOMPONENT_LIB}
    COMPONENT ${QUICC_CURRENT_COMPONENT_LIB_NAMESPACE}${QUICC_CURRENT_SUBCOMPONENT_LIB}
    DIRECTORIES
      ${CMAKE_CURRENT_SOURCE_DIR}
  )
endif()
