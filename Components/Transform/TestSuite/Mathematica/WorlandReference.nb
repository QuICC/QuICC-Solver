(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    268282,       6303]
NotebookOptionsPosition[    263339,       6222]
NotebookOutlinePosition[    264843,       6264]
CellTagsIndexPosition[    264596,       6254]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{"Setup", " ", "data", " ", "and", " ", "reference", " ", "roots"}],
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nbPath", "=", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"nbDepth", "=", 
     RowBox[{"FileNameDepth", "[", "nbPath", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"quiccroot", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{
       RowBox[{"FileNameSplit", "[", "nbPath", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", 
         RowBox[{"nbDepth", "-", "4"}]}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataroot", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
        "quiccroot", ",", "\"\<build\>\"", ",", "\"\<Components\>\"", ",", 
         "\"\<Transform\>\"", ",", "\"\<TestSuite\>\""}], "}"}], "]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dataroot", "::", "wrongpath"}], "=", 
     "\"\<Path to data root does not exist: `1`\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"DirectoryQ", "[", "dataroot", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"dataroot", "::", "wrongpath"}], ",", "dataroot"}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"datadir", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<_data\>\"", ",", "\"\<Transform\>\"", ",", "\"\<Worland\>\""}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"refdir", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<_refdata\>\"", ",", "\"\<Transform\>\"", ",", "\"\<Worland\>\""}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Energy Tests\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SelectedNotebook", "[", "]"}], ",", "\"\<energyTests\>\""}], 
      "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Projector Tests\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SelectedNotebook", "[", "]"}], ",", 
       "\"\<projectorTests\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Integrator Tests\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SelectedNotebook", "[", "]"}], ",", 
       "\"\<integratorTests\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Backward-Forward loop Tests\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SelectedNotebook", "[", "]"}], ",", "\"\<bfloopTests\>\""}], 
      "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Power Tests\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SelectedNotebook", "[", "]"}], ",", "\"\<powerTests\>\""}], 
      "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Radial Power Tests\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SelectedNotebook", "[", "]"}], ",", 
       "\"\<radialPowerTests\>\""}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9049668209406652`*^9, 3.904966882523089*^9}, {
  3.9049669208094177`*^9, 3.904966922765402*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"4b518cb1-a97a-4280-bc3b-8ac8aeba4e78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{"General", " ", "Worland", " ", "setup"}], "\[IndentingNewLine]", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "Needs", "[", "\"\<NumericalDifferentialEquationAnalysis`\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"$MaxExtraPrecision", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mpprec", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"w\[Alpha]", "=", "0"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w\[Alpha]", "=", 
     FractionBox[
      RowBox[{"-", "1"}], "2"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"norm", "[", 
      RowBox[{"k_", ",", "\[Alpha]_", ",", "\[Beta]_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"k", "\[Equal]", "0"}], ",", 
       SqrtBox[
        RowBox[{
         FractionBox["1", "2"], 
         FractionBox[
          RowBox[{
           RowBox[{"Gamma", "[", 
            RowBox[{"\[Alpha]", "+", "1"}], "]"}], 
           RowBox[{"Gamma", "[", 
            RowBox[{"\[Beta]", "+", "1"}], "]"}]}], 
          RowBox[{"Gamma", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]", "+", "2"}], "]"}]]}]], ",", 
       SqrtBox[
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "k"}], "+", "\[Alpha]", "+", "\[Beta]", "+", "1"}], 
            ")"}]}]], 
         FractionBox[
          RowBox[{
           RowBox[{"Gamma", "[", 
            RowBox[{"k", "+", "\[Alpha]", "+", "1"}], "]"}], 
           RowBox[{"Gamma", "[", 
            RowBox[{"k", "+", "\[Beta]", "+", "1"}], "]"}]}], 
          RowBox[{
           RowBox[{"Gamma", "[", 
            RowBox[{"k", "+", "\[Alpha]", "+", "\[Beta]", "+", "1"}], "]"}], 
           RowBox[{"Gamma", "[", 
            RowBox[{"k", "+", "1"}], "]"}]}]]}]]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wchebgrid", "[", "n_", "]"}], ":=", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"2", "k"}], "-", "1"}], 
           RowBox[{"4", "n"}]], "\[Pi]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "n", ",", "1", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "mpprec"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wchebweights", "[", "n_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      FractionBox["\[Pi]", 
       RowBox[{"2", "n"}]], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wleggrid", "[", "n_", "]"}], ":=", 
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"GaussianQuadratureWeights", "[", 
         RowBox[{"n", ",", 
          RowBox[{"-", "1"}], ",", "1", ",", "mpprec"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", "1"}], "2"]]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wlegweights", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"GaussianQuadratureWeights", "[", 
      RowBox[{"n", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", "mpprec"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wpowergrid", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"GaussianQuadratureWeights", "[", 
      RowBox[{
       RowBox[{"2", "n"}], ",", 
       RowBox[{"-", "1"}], ",", "1", ",", "mpprec"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        RowBox[{"n", "+", "1"}], ";;"}], ",", "1"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wpowerweights", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"GaussianQuadratureWeights", "[", 
      RowBox[{
       RowBox[{"2", "n"}], ",", 
       RowBox[{"-", "1"}], ",", "1", ",", "mpprec"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        RowBox[{"n", "+", "1"}], ";;"}], ",", "2"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"wgrid", "[", "n_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"w\[Alpha]", "\[Equal]", "0"}], ",", 
       RowBox[{"wleggrid", "[", "n", "]"}], ",", 
       RowBox[{"wchebgrid", "[", "n", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wweights", "[", "n_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"w\[Alpha]", "\[Equal]", "0"}], ",", 
      RowBox[{"wlegweights", "[", "n", "]"}], ",", 
      RowBox[{"wchebweights", "[", "n", "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "dWorland", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dWorland0", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["t", "l"], 
         RowBox[{"JacobiP", "[", 
          RowBox[{"0", ",", "w\[Alpha]", ",", 
           RowBox[{"l", "-", 
            FractionBox["1", "2"]}], ",", 
           RowBox[{
            RowBox[{"2", 
             SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dWorland", "[", 
      RowBox[{"n_", ",", "l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["t", "l"], 
         RowBox[{"JacobiP", "[", 
          RowBox[{"n", ",", "w\[Alpha]", ",", 
           RowBox[{"l", "-", 
            FractionBox["1", "2"]}], ",", 
           RowBox[{
            RowBox[{"2", 
             SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "slaplWorland", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"slaplWorland0", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "t", "]"}], "\[Equal]", "0"}], ",", "0", ",", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "t", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"slaplWorland1", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["t", "2"]], 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["t", "2"], 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["t", "l"], 
              RowBox[{"JacobiP", "[", 
               RowBox[{"1", ",", "w\[Alpha]", ",", 
                RowBox[{"l", "-", 
                 FractionBox["1", "2"]}], ",", 
                RowBox[{
                 RowBox[{"2", 
                  SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", 
             "t"}], "]"}]}], ",", "t"}], "]"}]}], "-", 
       RowBox[{
        FractionBox[
         RowBox[{"l", 
          RowBox[{"(", 
           RowBox[{"l", "+", "1"}], ")"}]}], 
         SuperscriptBox["t", "2"]], 
        SuperscriptBox["t", "l"], 
        RowBox[{"JacobiP", "[", 
         RowBox[{"1", ",", "w\[Alpha]", ",", 
          RowBox[{"l", "-", 
           RowBox[{"1", "/", "2"}]}], ",", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"slaplWorland", "[", 
      RowBox[{"n_", ",", "l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["t", "2"]], 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["t", "2"], 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["t", "l"], 
              RowBox[{"JacobiP", "[", 
               RowBox[{"n", ",", "w\[Alpha]", ",", 
                RowBox[{"l", "-", 
                 FractionBox["1", "2"]}], ",", 
                RowBox[{
                 RowBox[{"2", 
                  SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", 
             "t"}], "]"}]}], ",", "t"}], "]"}]}], "-", 
       RowBox[{
        FractionBox[
         RowBox[{"l", 
          RowBox[{"(", 
           RowBox[{"l", "+", "1"}], ")"}]}], 
         SuperscriptBox["t", "2"]], 
        SuperscriptBox["t", "l"], 
        RowBox[{"JacobiP", "[", 
         RowBox[{"n", ",", "w\[Alpha]", ",", 
          RowBox[{"l", "-", 
           RowBox[{"1", "/", "2"}]}], ",", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "claplhWorland", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"claplhWorland0", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "t", "]"}], "\[Equal]", "0"}], ",", "0", ",", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "t", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"claplhWorland1", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "t"], 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"t", " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["t", "l"], 
              RowBox[{"JacobiP", "[", 
               RowBox[{"1", ",", "w\[Alpha]", ",", 
                RowBox[{"l", "-", 
                 FractionBox["1", "2"]}], ",", 
                RowBox[{
                 RowBox[{"2", 
                  SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", 
             "t"}], "]"}]}], ",", "t"}], "]"}]}], "-", 
       RowBox[{
        FractionBox[
         SuperscriptBox["l", "2"], 
         SuperscriptBox["t", "2"]], 
        SuperscriptBox["t", "l"], 
        RowBox[{"JacobiP", "[", 
         RowBox[{"1", ",", "w\[Alpha]", ",", 
          RowBox[{"l", "-", 
           RowBox[{"1", "/", "2"}]}], ",", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"claplhWorland", "[", 
      RowBox[{"n_", ",", "l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "t"], 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"t", " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["t", "l"], 
              RowBox[{"JacobiP", "[", 
               RowBox[{"n", ",", "w\[Alpha]", ",", 
                RowBox[{"l", "-", 
                 FractionBox["1", "2"]}], ",", 
                RowBox[{
                 RowBox[{"2", 
                  SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", 
             "t"}], "]"}]}], ",", "t"}], "]"}]}], "-", 
       RowBox[{
        FractionBox[
         SuperscriptBox["l", "2"], 
         SuperscriptBox["t", "2"]], 
        SuperscriptBox["t", "l"], 
        RowBox[{"JacobiP", "[", 
         RowBox[{"n", ",", "w\[Alpha]", ",", 
          RowBox[{"l", "-", 
           RowBox[{"1", "/", "2"}]}], ",", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "dclaplhWorland", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dclaplhWorland0", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "t", "]"}], "\[Equal]", "0"}], ",", "0", ",", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "t", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dclaplhWorland1", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["1", "t"], 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"t", " ", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["t", "l"], 
                RowBox[{"JacobiP", "[", 
                 RowBox[{"1", ",", "w\[Alpha]", ",", 
                  RowBox[{"l", "-", 
                   FractionBox["1", "2"]}], ",", 
                  RowBox[{
                   RowBox[{"2", 
                    SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", 
               "t"}], "]"}]}], ",", "t"}], "]"}]}], "-", 
         RowBox[{
          FractionBox[
           SuperscriptBox["l", "2"], 
           SuperscriptBox["t", "2"]], 
          SuperscriptBox["t", "l"], 
          RowBox[{"JacobiP", "[", 
           RowBox[{"1", ",", "w\[Alpha]", ",", 
            RowBox[{"l", "-", 
             RowBox[{"1", "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"2", 
              SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}]}], ",", "t"}],
        "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dclaplhWorland2", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["1", "t"], 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"t", " ", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["t", "l"], 
                RowBox[{"JacobiP", "[", 
                 RowBox[{"2", ",", "w\[Alpha]", ",", 
                  RowBox[{"l", "-", 
                   FractionBox["1", "2"]}], ",", 
                  RowBox[{
                   RowBox[{"2", 
                    SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", 
               "t"}], "]"}]}], ",", "t"}], "]"}]}], "-", 
         RowBox[{
          FractionBox[
           SuperscriptBox["l", "2"], 
           SuperscriptBox["t", "2"]], 
          SuperscriptBox["t", "l"], 
          RowBox[{"JacobiP", "[", 
           RowBox[{"2", ",", "w\[Alpha]", ",", 
            RowBox[{"l", "-", 
             RowBox[{"1", "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"2", 
              SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}]}], ",", "t"}],
        "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dclaplhWorland", "[", 
      RowBox[{"n_", ",", "l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["1", "t"], 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"t", " ", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["t", "l"], 
                RowBox[{"JacobiP", "[", 
                 RowBox[{"n", ",", "w\[Alpha]", ",", 
                  RowBox[{"l", "-", 
                   FractionBox["1", "2"]}], ",", 
                  RowBox[{
                   RowBox[{"2", 
                    SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", 
               "t"}], "]"}]}], ",", "t"}], "]"}]}], "-", 
         RowBox[{
          FractionBox[
           SuperscriptBox["l", "2"], 
           SuperscriptBox["t", "2"]], 
          SuperscriptBox["t", "l"], 
          RowBox[{"JacobiP", "[", 
           RowBox[{"n", ",", "w\[Alpha]", ",", 
            RowBox[{"l", "-", 
             RowBox[{"1", "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"2", 
              SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}]}], ",", "t"}],
        "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "divrclaplhWorland", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"divrclaplhWorland0", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "t", "]"}], "\[Equal]", "0"}], ",", "0", ",", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "t", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"divrclaplhWorland1", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       FractionBox["1", "t"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "t"], 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"t", " ", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["t", "l"], 
                RowBox[{"JacobiP", "[", 
                 RowBox[{"1", ",", "w\[Alpha]", ",", 
                  RowBox[{"l", "-", 
                   FractionBox["1", "2"]}], ",", 
                  RowBox[{
                   RowBox[{"2", 
                    SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", 
               "t"}], "]"}]}], ",", "t"}], "]"}]}], "-", 
         RowBox[{
          FractionBox[
           SuperscriptBox["l", "2"], 
           SuperscriptBox["t", "2"]], 
          SuperscriptBox["t", "l"], 
          RowBox[{"JacobiP", "[", 
           RowBox[{"1", ",", "w\[Alpha]", ",", 
            RowBox[{"l", "-", 
             RowBox[{"1", "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"2", 
              SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}]}], ")"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"divrclaplhWorland", "[", 
      RowBox[{"n_", ",", "l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       FractionBox["1", "t"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "t"], 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"t", " ", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["t", "l"], 
                RowBox[{"JacobiP", "[", 
                 RowBox[{"n", ",", "w\[Alpha]", ",", 
                  RowBox[{"l", "-", 
                   FractionBox["1", "2"]}], ",", 
                  RowBox[{
                   RowBox[{"2", 
                    SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", 
               "t"}], "]"}]}], ",", "t"}], "]"}]}], "-", 
         RowBox[{
          FractionBox[
           SuperscriptBox["l", "2"], 
           SuperscriptBox["t", "2"]], 
          SuperscriptBox["t", "l"], 
          RowBox[{"JacobiP", "[", 
           RowBox[{"n", ",", "w\[Alpha]", ",", 
            RowBox[{"l", "-", 
             RowBox[{"1", "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"2", 
              SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}]}], ")"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "drWorland", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"drWorland0", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["t", 
          RowBox[{"l", "+", "1"}]], 
         RowBox[{"JacobiP", "[", 
          RowBox[{"0", ",", "w\[Alpha]", ",", 
           RowBox[{"l", "-", 
            FractionBox["1", "2"]}], ",", 
           RowBox[{
            RowBox[{"2", 
             SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", "t"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"drWorland", "[", 
      RowBox[{"n_", ",", "l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["t", 
          RowBox[{"l", "+", "1"}]], 
         RowBox[{"JacobiP", "[", 
          RowBox[{"n", ",", "w\[Alpha]", ",", 
           RowBox[{"l", "-", 
            FractionBox["1", "2"]}], ",", 
           RowBox[{
            RowBox[{"2", 
             SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", "t"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "divrdrWorland", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"divrdrWorland0", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       FractionBox["1", "t"], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["t", 
           RowBox[{"l", "+", "1"}]], 
          RowBox[{"JacobiP", "[", 
           RowBox[{"0", ",", "w\[Alpha]", ",", 
            RowBox[{"l", "-", 
             FractionBox["1", "2"]}], ",", 
            RowBox[{
             RowBox[{"2", 
              SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", "t"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"divrdrWorland", "[", 
      RowBox[{"n_", ",", "l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       FractionBox["1", "t"], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["t", 
           RowBox[{"l", "+", "1"}]], 
          RowBox[{"JacobiP", "[", 
           RowBox[{"n", ",", "w\[Alpha]", ",", 
            RowBox[{"l", "-", 
             FractionBox["1", "2"]}], ",", 
            RowBox[{
             RowBox[{"2", 
              SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", "t"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "intgdivrdrWorland", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"divr", "[", 
     RowBox[{"f_", ",", "l_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "out", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", " ", "=", " ", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          FractionBox["1", "t"], "f"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "out"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"divrClean", "[", 
     RowBox[{"f_", ",", "l_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"out", ",", "bad"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", " ", "=", " ", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          FractionBox["1", "t"], "f"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bad", "=", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"out", ",", "t", ",", 
          RowBox[{"l", "-", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"out", "=", 
        RowBox[{"out", "-", 
         RowBox[{"bad", " ", 
          SuperscriptBox["t", 
           RowBox[{"l", "-", "2"}]]}]}]}], ";", "\[IndentingNewLine]", 
       "out"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"divrdr", "[", 
     RowBox[{"f_", ",", "l_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "out", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", " ", "=", " ", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          FractionBox["1", "t"], 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"t", " ", "f"}], ",", "t"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "out"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"divrdrClean", "[", 
     RowBox[{"f_", ",", "l_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"out", ",", "bad"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", " ", "=", " ", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          FractionBox["1", "t"], 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"t", " ", "f"}], ",", "t"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bad", "=", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"out", ",", "t", ",", 
          RowBox[{"l", "-", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"out", "=", 
        RowBox[{"out", "-", 
         RowBox[{"bad", " ", 
          SuperscriptBox["t", 
           RowBox[{"l", "-", "2"}]]}]}]}], ";", "\[IndentingNewLine]", 
       "out"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", "ddivrdrWorland", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ddivrdrWorland0", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "t"], 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox["t", 
             RowBox[{"l", "+", "1"}]], 
            RowBox[{"JacobiP", "[", 
             RowBox[{"0", ",", "w\[Alpha]", ",", 
              RowBox[{"l", "-", 
               FractionBox["1", "2"]}], ",", 
              RowBox[{
               RowBox[{"2", 
                SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", "t"}],
           "]"}]}], ",", "t"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"ddivrdrWorland1", "[", 
      RowBox[{"l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "t"], 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox["t", 
             RowBox[{"l", "+", "1"}]], 
            RowBox[{"JacobiP", "[", 
             RowBox[{"1", ",", "w\[Alpha]", ",", 
              RowBox[{"l", "-", 
               FractionBox["1", "2"]}], ",", 
              RowBox[{
               RowBox[{"2", 
                SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", "t"}],
           "]"}]}], ",", "t"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"ddivrdrWorland", "[", 
      RowBox[{"n_", ",", "l_", ",", "t_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "t"], 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox["t", 
             RowBox[{"l", "+", "1"}]], 
            RowBox[{"JacobiP", "[", 
             RowBox[{"n", ",", "w\[Alpha]", ",", 
              RowBox[{"l", "-", 
               FractionBox["1", "2"]}], ",", 
              RowBox[{
               RowBox[{"2", 
                SuperscriptBox["t", "2"]}], "-", "1"}]}], "]"}]}], ",", "t"}],
           "]"}]}], ",", "t"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", " ", "\[IndentingNewLine]", 
    RowBox[{"Operators", " ", "to", " ", "work", " ", "on", " ", "grid"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Wnl", "[", 
     RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", 
    RowBox[{
     SuperscriptBox["r", "l"], 
     RowBox[{
      RowBox[{"JacobiP", "[", 
       RowBox[{"n", ",", "w\[Alpha]", ",", 
        RowBox[{"l", "-", 
         FractionBox["1", "2"]}], ",", 
        RowBox[{
         RowBox[{"2", 
          SuperscriptBox["r", "2"]}], "-", "1"}]}], "]"}], "/", 
      RowBox[{"norm", "[", 
       RowBox[{"n", ",", "w\[Alpha]", ",", 
        RowBox[{"l", "-", 
         RowBox[{"1", "/", "2"}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WnlEnergy", "[", 
     RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", 
    RowBox[{
     SuperscriptBox["r", "l"], 
     RowBox[{
      RowBox[{"JacobiP", "[", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"l", "+", 
         FractionBox["1", "2"]}], ",", 
        RowBox[{
         RowBox[{"2", 
          SuperscriptBox["r", "2"]}], "-", "1"}]}], "]"}], "/", 
      RowBox[{"norm", "[", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"l", "+", 
         RowBox[{"1", "/", "2"}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "0"}], ",", 
        RowBox[{"dWorland", "[", 
         RowBox[{"n", ",", "l", ",", "r"}], "]"}], ",", 
        RowBox[{"dWorland0", "[", 
         RowBox[{"l", ",", "r"}], "]"}]}], "]"}], "/", 
      RowBox[{"norm", "[", 
       RowBox[{"n", ",", "w\[Alpha]", ",", 
        RowBox[{"l", "-", 
         RowBox[{"1", "/", "2"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"slaplWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "0"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", ">", "1"}], ",", 
          RowBox[{"slaplWorland", "[", 
           RowBox[{"n", ",", "l", ",", "r"}], "]"}], ",", 
          RowBox[{"slaplWorland1", "[", 
           RowBox[{"l", ",", "r"}], "]"}]}], "]"}], ",", 
        RowBox[{"slaplWorland0", "[", 
         RowBox[{"l", ",", "r"}], "]"}]}], "]"}], "/", 
      RowBox[{"norm", "[", 
       RowBox[{"n", ",", "w\[Alpha]", ",", 
        RowBox[{"l", "-", 
         RowBox[{"1", "/", "2"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"divrWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", 
     RowBox[{
      SuperscriptBox["r", 
       RowBox[{"l", "-", "1"}]], 
      RowBox[{
       RowBox[{"JacobiP", "[", 
        RowBox[{"n", ",", "w\[Alpha]", ",", 
         RowBox[{"l", "-", 
          FractionBox["1", "2"]}], ",", 
         RowBox[{
          RowBox[{"2", 
           SuperscriptBox["r", "2"]}], "-", "1"}]}], "]"}], "/", 
       RowBox[{"norm", "[", 
        RowBox[{"n", ",", "w\[Alpha]", ",", 
         RowBox[{"l", "-", 
          RowBox[{"1", "/", "2"}]}]}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", 
     RowBox[{
      SuperscriptBox["r", 
       RowBox[{"l", "+", "1"}]], 
      RowBox[{
       RowBox[{"JacobiP", "[", 
        RowBox[{"n", ",", "w\[Alpha]", ",", 
         RowBox[{"l", "-", 
          FractionBox["1", "2"]}], ",", 
         RowBox[{
          RowBox[{"2", 
           SuperscriptBox["r", "2"]}], "-", "1"}]}], "]"}], "/", 
       RowBox[{"norm", "[", 
        RowBox[{"n", ",", "w\[Alpha]", ",", 
         RowBox[{"l", "-", 
          RowBox[{"1", "/", "2"}]}]}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"drWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "0"}], ",", 
        RowBox[{"drWorland", "[", 
         RowBox[{"n", ",", "l", ",", "r"}], "]"}], ",", 
        RowBox[{"drWorland0", "[", 
         RowBox[{"l", ",", "r"}], "]"}]}], "]"}], "/", 
      RowBox[{"norm", "[", 
       RowBox[{"n", ",", "w\[Alpha]", ",", 
        RowBox[{"l", "-", 
         RowBox[{"1", "/", "2"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"divrdrWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "0"}], ",", 
        RowBox[{"divrdrWorland", "[", 
         RowBox[{"n", ",", "l", ",", "r"}], "]"}], ",", 
        RowBox[{"divrdrWorland0", "[", 
         RowBox[{"l", ",", "r"}], "]"}]}], "]"}], "/", 
      RowBox[{"norm", "[", 
       RowBox[{"n", ",", "w\[Alpha]", ",", 
        RowBox[{"l", "-", 
         RowBox[{"1", "/", "2"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ddivrdrWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "0"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", ">", "1"}], ",", 
          RowBox[{"ddivrdrWorland", "[", 
           RowBox[{"n", ",", "l", ",", "r"}], "]"}], ",", 
          RowBox[{"ddivrdrWorland1", "[", 
           RowBox[{"l", ",", "r"}], "]"}]}], "]"}], ",", 
        RowBox[{"ddivrdrWorland0", "[", 
         RowBox[{"l", ",", "r"}], "]"}]}], "]"}], "/", 
      RowBox[{"norm", "[", 
       RowBox[{"n", ",", "w\[Alpha]", ",", 
        RowBox[{"l", "-", 
         RowBox[{"1", "/", "2"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"claplhWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "0"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", ">", "1"}], ",", 
          RowBox[{"claplhWorland", "[", 
           RowBox[{"n", ",", "l", ",", "r"}], "]"}], ",", 
          RowBox[{"claplhWorland1", "[", 
           RowBox[{"l", ",", "r"}], "]"}]}], "]"}], ",", 
        RowBox[{"claplhWorland0", "[", 
         RowBox[{"l", ",", "r"}], "]"}]}], "]"}], "/", 
      RowBox[{"norm", "[", 
       RowBox[{"n", ",", "w\[Alpha]", ",", 
        RowBox[{"l", "-", 
         RowBox[{"1", "/", "2"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dclaplhWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "0"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", ">", "1"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"n", ">", "2"}], ",", 
            RowBox[{"dclaplhWorland", "[", 
             RowBox[{"n", ",", "l", ",", "r"}], "]"}], ",", 
            RowBox[{"dclaplhWorland2", "[", 
             RowBox[{"l", ",", "r"}], "]"}]}], "]"}], ",", 
          RowBox[{"dclaplhWorland1", "[", 
           RowBox[{"l", ",", "r"}], "]"}]}], "]"}], ",", 
        RowBox[{"dclaplhWorland0", "[", 
         RowBox[{"l", ",", "r"}], "]"}]}], "]"}], "/", 
      RowBox[{"norm", "[", 
       RowBox[{"n", ",", "w\[Alpha]", ",", 
        RowBox[{"l", "-", 
         RowBox[{"1", "/", "2"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"divrclaplhWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "0"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", ">", "1"}], ",", 
          RowBox[{"divrclaplhWorland", "[", 
           RowBox[{"n", ",", "l", ",", "r"}], "]"}], ",", 
          RowBox[{"divrclaplhWorland1", "[", 
           RowBox[{"l", ",", "r"}], "]"}]}], "]"}], ",", 
        RowBox[{"divrclaplhWorland0", "[", 
         RowBox[{"l", ",", "r"}], "]"}]}], "]"}], "/", 
      RowBox[{"norm", "[", 
       RowBox[{"n", ",", "w\[Alpha]", ",", 
        RowBox[{"l", "-", 
         RowBox[{"1", "/", "2"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"divrWnlzeroWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"l", "==", "0"}], ",", 
       RowBox[{"0", "r"}], ",", 
       RowBox[{"divrWnl", "[", 
        RowBox[{"n", ",", "l", ",", "r"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dWnlWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"l", "==", "0"}], ",", 
       RowBox[{"Wnl", "[", 
        RowBox[{"n", ",", "l", ",", "r"}], "]"}], ",", 
       RowBox[{"dWnl", "[", 
        RowBox[{"n", ",", "l", ",", "r"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"divrdrWnlzeroWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"l", "==", "0"}], ",", 
       RowBox[{"0", "r"}], ",", 
       RowBox[{"divrdrWnl", "[", 
        RowBox[{"n", ",", "l", ",", "r"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"claplhWnldivrdrWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"l", "==", "0"}], ",", 
       RowBox[{"divrdrWnl", "[", 
        RowBox[{"n", ",", "l", ",", "r"}], "]"}], ",", 
       RowBox[{"claplhWnl", "[", 
        RowBox[{"n", ",", "l", ",", "r"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dclaplhWnlddivrdrWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"l", "==", "0"}], ",", 
       RowBox[{"ddivrdrWnl", "[", 
        RowBox[{"n", ",", "l", ",", "r"}], "]"}], ",", 
       RowBox[{"dclaplhWnl", "[", 
        RowBox[{"n", ",", "l", ",", "r"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"divrclaplhWnlzeroWnl", "[", 
      RowBox[{"n_", ",", "l_", ",", "r_"}], "]"}], ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"l", "==", "0"}], ",", 
       RowBox[{"0", "r"}], ",", 
       RowBox[{"divrclaplhWnl", "[", 
        RowBox[{"n", ",", "l", ",", "r"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"w\[Alpha]", "\[Equal]", 
       FractionBox[
        RowBox[{"-", " ", "1"}], "2"]}], ",", 
      RowBox[{"WType", "=", "\"\<Chebyshev\>\""}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"w\[Alpha]", "\[Equal]", "0"}], ",", 
        RowBox[{"WType", "=", "\"\<Legendre\>\""}], ",", 
        RowBox[{"WType", "=", "\"\<Unknown\>\""}]}], "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"Spectral", " ", "space", " ", "operators"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"i0", "[", 
      RowBox[{"spec_", ",", "l_", ",", 
       RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", " ", "\[IndentingNewLine]", "spec"}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"i0zero", "[", 
      RowBox[{"spec_", ",", "l_", ",", 
       RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"l", "==", "0"}], ",", 
         RowBox[{"0", " ", "spec"}], ",", 
         RowBox[{"i0", "[", 
          RowBox[{"spec", ",", "l", ",", "tFunc"}], "]"}]}], "]"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"i2", "[", 
      RowBox[{"spec_", ",", "l_", ",", 
       RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "grid", ",", "wgts", ",", "i2spec", ",", "gN", ",", "nN", ",", 
         "i2g"}], "}"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nN", "=", 
         RowBox[{"Length", "[", "spec", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gN", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"nN", "+", 
            RowBox[{"Floor", "[", 
             RowBox[{"l", "/", "2"}], "]"}], "+", "5"}], ",", "10"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"grid", "=", 
         RowBox[{"wgrid", "[", "gN", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"wgts", "=", 
         RowBox[{"wweights", "[", "gN", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"i2spec", "=", 
         RowBox[{"Total", "[", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"spec", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "!=", " ", "0"}], ",", 
              RowBox[{
               RowBox[{"spec", "[", 
                RowBox[{"[", "i", "]"}], "]"}], " ", 
               SuperscriptBox["r", "l"], 
               RowBox[{"Integrate", "[", 
                RowBox[{
                 RowBox[{"4", " ", "r", " ", 
                  RowBox[{"Integrate", "[", 
                   RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["r", 
                    RowBox[{"1", "-", "l"}]], 
                    RowBox[{"Wnl", "[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "l", ",", " ", "r"}], 
                    "]"}]}], ",", "r"}], "]"}]}], ",", "r"}], "]"}]}], ",", 
              "0"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"i2g", "=", 
         RowBox[{"i2spec", "/.", 
          RowBox[{"{", 
           RowBox[{"r", "->", "grid"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"i2spec", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"i2spec", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;"}], "]"}], "]"}], "=", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"i", "-", "1"}], "<=", 
              RowBox[{
               RowBox[{"tFunc", "[", 
                RowBox[{
                 RowBox[{"nN", "-", "1"}], ",", "l"}], "]"}], "+", "1"}]}], 
             ",", 
             RowBox[{"Dot", "[", 
              RowBox[{
               RowBox[{"wgts", " ", 
                RowBox[{"Wnl", "[", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", "l", ",", "grid"}], "]"}]}], 
               ",", " ", "i2g"}], "]"}], ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3", ",", 
             RowBox[{"nN", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "i2spec"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"i2zero", "[", 
      RowBox[{"spec_", ",", "l_", ",", 
       RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"l", "==", "0"}], ",", 
         RowBox[{"0", " ", "spec"}], ",", 
         RowBox[{"i2", "[", 
          RowBox[{"spec", ",", "l", ",", "tFunc"}], "]"}]}], "]"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"i4", "[", 
      RowBox[{"spec_", ",", "l_", ",", 
       RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "grid", ",", "wgts", ",", "i4spec", ",", "gN", ",", "nN", ",", 
         "i4g"}], "}"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nN", "=", 
         RowBox[{"Length", "[", "spec", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gN", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"nN", "+", 
            RowBox[{"Floor", "[", 
             RowBox[{"l", "/", "2"}], "]"}], "+", "8"}], ",", "10"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"grid", "=", 
         RowBox[{"wgrid", "[", "gN", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"wgts", "=", 
         RowBox[{"wweights", "[", "gN", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"i4spec", "=", 
         RowBox[{"Total", "[", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"spec", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "!=", "0"}], ",", 
              RowBox[{
               RowBox[{"spec", "[", 
                RowBox[{"[", "i", "]"}], "]"}], " ", 
               SuperscriptBox["r", "l"], 
               RowBox[{"Integrate", "[", 
                RowBox[{
                 RowBox[{"4", " ", "r", 
                  RowBox[{"Integrate", "[", 
                   RowBox[{
                    RowBox[{"4", " ", "r", 
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"4", " ", "r", " ", 
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["r", 
                    RowBox[{"1", "-", "l"}]], 
                    RowBox[{"Wnl", "[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "l", ",", " ", "r"}], 
                    "]"}]}], ",", "r"}], "]"}]}], ",", "r"}], "]"}]}], ",", 
                    "r"}], "]"}]}], ",", "r"}], "]"}]}], ",", "0"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"i4g", "=", 
         RowBox[{"i4spec", "/.", 
          RowBox[{"{", 
           RowBox[{"r", "->", "grid"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"i4spec", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"i4spec", "[", 
          RowBox[{"[", 
           RowBox[{"3", ";;"}], "]"}], "]"}], "=", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"i", "-", "1"}], "<=", 
              RowBox[{
               RowBox[{"tFunc", "[", 
                RowBox[{
                 RowBox[{"nN", "-", "1"}], ",", "l"}], "]"}], "+", "2"}]}], 
             ",", 
             RowBox[{"Dot", "[", 
              RowBox[{
               RowBox[{"wgts", " ", 
                RowBox[{"Wnl", "[", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", "l", ",", "grid"}], "]"}]}], 
               ",", " ", "i4g"}], "]"}], ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "5", ",", 
             RowBox[{"nN", "+", "2"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "i4spec"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"i4zero", "[", 
      RowBox[{"spec_", ",", "l_", ",", 
       RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"l", "==", "0"}], ",", 
         RowBox[{"0", " ", "spec"}], ",", 
         RowBox[{"i4", "[", 
          RowBox[{"spec", ",", "l", ",", "tFunc"}], "]"}]}], "]"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"i6", "[", 
      RowBox[{"spec_", ",", "l_", ",", 
       RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "grid", ",", "wgts", ",", "i6spec", ",", "gN", ",", "nN", ",", 
         "i6g"}], "}"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nN", "=", 
         RowBox[{"Length", "[", "spec", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gN", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"nN", "+", 
            RowBox[{"Floor", "[", 
             RowBox[{"l", "/", "2"}], "]"}], "+", "11"}], ",", "10"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"grid", "=", 
         RowBox[{"wgrid", "[", "gN", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"wgts", "=", 
         RowBox[{"wweights", "[", "gN", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"i6spec", "=", 
         RowBox[{"Total", "[", 
          RowBox[{"ParallelTable", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"spec", "[", 
              RowBox[{"[", "i", "]"}], "]"}], 
             SuperscriptBox["r", "l"], 
             RowBox[{"Integrate", "[", 
              RowBox[{
               RowBox[{"4", " ", "r", " ", 
                RowBox[{"Integrate", "[", 
                 RowBox[{
                  RowBox[{"4", " ", "r", " ", 
                   RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"4", " ", "r", 
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"4", " ", "r", 
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"4", " ", "r", " ", 
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["r", 
                    RowBox[{"1", "-", "l"}]], 
                    RowBox[{"Wnl", "[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "l", ",", " ", "r"}], "]"}],
                     " ", 
                    RowBox[{"spec", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "r"}], "]"}]}], 
                    ",", "r"}], "]"}]}], ",", "r"}], "]"}]}], ",", "r"}], 
                    "]"}]}], ",", "r"}], "]"}]}], ",", "r"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"i6g", "=", 
         RowBox[{"i6spec", "/.", 
          RowBox[{"{", 
           RowBox[{"r", "->", "grid"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"i6spec", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"i6spec", "[", 
          RowBox[{"[", 
           RowBox[{"4", ";;"}], "]"}], "]"}], "=", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"i", "-", "1"}], "<=", 
              RowBox[{
               RowBox[{"tFunc", "[", 
                RowBox[{
                 RowBox[{"nN", "-", "1"}], ",", "l"}], "]"}], "+", "3"}]}], 
             ",", 
             RowBox[{"Dot", "[", 
              RowBox[{
               RowBox[{"wgts", " ", 
                RowBox[{"Wnl", "[", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", "l", ",", "grid"}], "]"}]}], 
               ",", " ", "i6g"}], "]"}], ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "7", ",", 
             RowBox[{"nN", "+", "3"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "i6spec"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"i6zero", "[", 
      RowBox[{"spec_", ",", "l_", ",", 
       RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"l", "==", "0"}], ",", 
         RowBox[{"0", " ", "spec"}], ",", 
         RowBox[{"i6", "[", 
          RowBox[{"spec", ",", "l", ",", "tFunc"}], "]"}]}], "]"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
    "Tools", " ", "for", " ", "uniform", " ", "or", " ", "triangular", " ", 
     "truncation"}], " ", "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"minTriangularTruncation", "=", "3"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"uniformTruncation", "[", 
      RowBox[{"maxN_", ",", "l_"}], "]"}], ":=", "maxN"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"triangularTruncation", "[", 
     RowBox[{"maxN_", ",", "l_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "n", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{"maxN", "-", 
         RowBox[{"Floor", "[", 
          RowBox[{"l", "/", "2"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"n", "<", " ", "minTriangularTruncation"}], ",", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Minmal n is smaller than \>\"", "<>", 
            RowBox[{"ToString", "[", "minTriangularTruncation", "]"}], "<>", 
            "\"\< (n = \>\"", "<>", 
            RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<, l = \>\"", " ", 
            "<>", 
            RowBox[{"ToString", "[", "l", "]"}], "<>", "\"\<, maxN = \>\"", 
            " ", "<>", 
            RowBox[{"ToString", "[", "maxN", "]"}], "<>", "\"\<)\>\""}], " ", 
           "]"}], ";", 
          RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "n"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dealiasGrid", "[", 
      RowBox[{"n_", ",", "l_", ",", 
       RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
     RowBox[{"Floor", "[", 
      RowBox[{"3", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tFunc", "[", 
           RowBox[{"n", ",", "l"}], "]"}], "+", 
          FractionBox["l", "2"], "+", "8"}], ")"}], "/", "2"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"uniformSetup", "[", "maxL_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nN", ",", "nR", ",", "f"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "=", "uniformTruncation"}], ";", "\[IndentingNewLine]", 
        RowBox[{"nN", "=", 
         RowBox[{
          RowBox[{"Floor", "[", 
           FractionBox["maxL", "2"], "]"}], "+", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nR", "=", 
         RowBox[{"dealiasGrid", "[", 
          RowBox[{
           RowBox[{"nN", "-", "1"}], ",", "maxL", ",", "f"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"nN", ",", "nR", ",", "f"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"triangularSetup", "[", "maxL_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nN", ",", "nR", ",", "f"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "=", "triangularTruncation"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nN", "=", 
         RowBox[{
          RowBox[{"Floor", "[", 
           FractionBox["maxL", "2"], "]"}], "+", "1", "+", 
          "minTriangularTruncation"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nR", "=", 
         RowBox[{"dealiasGrid", "[", 
          RowBox[{
           RowBox[{"nN", "-", "1"}], ",", "maxL", ",", "f"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"nN", ",", "nR", ",", "f"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
    "Tools", " ", "for", " ", "generating", " ", "spectral", " ", "space", 
     " ", "spectra"}], " ", "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"unitSpectrum", "[", 
      RowBox[{"n_", ",", "maxN_", ",", "l_", ",", 
       RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "<=", 
        RowBox[{"tFunc", "[", 
         RowBox[{"maxN", ",", "l"}], "]"}]}], ",", "1", ",", "0"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"maxSpectrum", "[", 
      RowBox[{"n_", ",", "maxN_", ",", "l_", ",", 
       RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "==", 
        RowBox[{"tFunc", "[", 
         RowBox[{"maxN", ",", "l"}], "]"}]}], ",", "1", ",", "0"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"minSpectrum", "[", 
      RowBox[{"n_", ",", "maxN_", ",", "l_", ",", 
       RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "==", "0"}], ",", "1", ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"randSpectrum", "[", 
     RowBox[{"n_", ",", "maxN_", ",", "l_", ",", 
      RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "val", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"n", "<=", 
          RowBox[{"tFunc", "[", 
           RowBox[{"maxN", ",", "l"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"val", " ", "=", 
           RowBox[{"N", "[", " ", 
            RowBox[{
             FractionBox[
              RowBox[{"IntegerPart", "[", 
               RowBox[{
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   FractionBox["1", "10"], ",", "1"}], "}"}], "]"}], " ", 
                SuperscriptBox["10", "3"]}], "]"}], 
              SuperscriptBox["10", "3"]], ",", "mpprec"}], "]"}]}], ";"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"val", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "val"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
    "Configure", " ", "which", " ", "output", " ", "to", " ", "generate"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genInDataDefault", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"genRefDataDefault", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"generateInData", "=", "genInDataDefault"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"generateRefData", "=", "genRefDataDefault"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"configureGenerator", "[", 
      RowBox[{
       RowBox[{"genIn_", ":", "genInDataDefault"}], ",", 
       RowBox[{"genRef_", ":", "genRefDataDefault"}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"generateInData", "=", "genIn"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"generateRefData", "=", "genRef"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"Generate", " ", "metadata"}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"createMetadata", "[", 
      RowBox[{"nN_", ",", " ", "gridN_", ",", "ls_", ",", " ", "tFunc_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"descr", ",", "lModes", ",", "mModes", ",", 
         RowBox[{"nL", "=", 
          RowBox[{"Length", "@", "ls"}]}], ",", "header"}], " ", "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"lModes", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ls", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "nL"}], "}"}]}], "]"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"mModes", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"tFunc", "[", 
                 RowBox[{
                  RowBox[{"nN", "-", "1"}], ",", 
                  RowBox[{"ls", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "+", "1"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "nL"}], "}"}]}], "]"}], "]"}]}], 
         ";"}], ";", "\[IndentingNewLine]", 
        RowBox[{"header", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
          "\"\<# Format description\>\"", ",", "\[IndentingNewLine]", 
           "\"\<# line 1: number of lines\>\"", ",", "\[IndentingNewLine]", 
           "\"\<# line 2: simulation modal size\>\"", ",", " ", 
           "\[IndentingNewLine]", 
           "\"\<# line 3: simulation physical size\>\"", ",", " ", 
           "\[IndentingNewLine]", "\"\<# line 4: number of modes nK\>\"", ",",
            " ", "\[IndentingNewLine]", "\"\<# line 5 + 2*k: mode\>\"", ",", 
           "\[IndentingNewLine]", 
           "\"\<# line 6 + 2*k: number of 2D modes\>\"", ",", 
           "\[IndentingNewLine]", "\"\<# line (5 + 2*nK) + 2*j: 2D mode\>\"", 
           ",", "\[IndentingNewLine]", 
           "\"\<# line (6 + 2*nK) + 2*j: number of 1D modes\>\""}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"descr", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
           "nN", ",", "gridN", ",", "nL", ",", "lModes", ",", "mModes"}], 
           "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"descr", " ", "=", " ", 
         RowBox[{"Prepend", "[", 
          RowBox[{"descr", ",", 
           RowBox[{"Length", "@", "descr"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"descr", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Prepend", "[", 
           RowBox[{"descr", ",", "header"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "descr"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.78148875342758*^9, 3.781488863642158*^9}, {
   3.78148895707189*^9, 3.7814889573907623`*^9}, {3.781489029948645*^9, 
   3.7814890553640957`*^9}, {3.781489136285537*^9, 3.7814891932082443`*^9}, {
   3.78149303697103*^9, 3.781493122214035*^9}, {3.781493298461301*^9, 
   3.7814933270278482`*^9}, {3.7814935640115232`*^9, 3.781493570780239*^9}, {
   3.7814936070028563`*^9, 3.7814936754192247`*^9}, {3.781494195059642*^9, 
   3.781494261950231*^9}, {3.78149433242463*^9, 3.781494338774973*^9}, {
   3.7814943802568893`*^9, 3.7814943852474613`*^9}, {3.7814961066475563`*^9, 
   3.7814961153747807`*^9}, {3.78149617330755*^9, 3.781496177105639*^9}, {
   3.78149629659872*^9, 3.781496300873941*^9}, {3.781496391433565*^9, 
   3.7814963965715733`*^9}, {3.781496456848558*^9, 3.781496505405869*^9}, {
   3.781496540756978*^9, 3.781496544273192*^9}, {3.7814967192140417`*^9, 
   3.781496738201515*^9}, {3.7815017839659843`*^9, 3.781501786262987*^9}, {
   3.781501960227508*^9, 3.781501961259927*^9}, {3.781502080388815*^9, 
   3.781502090561513*^9}, {3.781502127094915*^9, 3.781502130106089*^9}, {
   3.7815029325471163`*^9, 3.781503079085352*^9}, {3.781503198092917*^9, 
   3.781503198212654*^9}, {3.781504744687633*^9, 3.7815048621048727`*^9}, {
   3.781506694300408*^9, 3.781506719993579*^9}, 3.7815072720850163`*^9, {
   3.781507327153521*^9, 3.7815073276157093`*^9}, {3.781509997057876*^9, 
   3.781510002498629*^9}, {3.781510153522806*^9, 3.781510211843845*^9}, 
   3.7815117617654657`*^9, {3.781522632803562*^9, 3.7815228643881483`*^9}, {
   3.7815229895731277`*^9, 3.7815229896683407`*^9}, {3.782115560498343*^9, 
   3.78211556109634*^9}, {3.785117725218185*^9, 3.7851177468895493`*^9}, {
   3.785117813045287*^9, 3.785117819505453*^9}, {3.785117870594225*^9, 
   3.785117933725362*^9}, {3.785117991376897*^9, 3.785118073891451*^9}, {
   3.7851205407111053`*^9, 3.785120578818956*^9}, {3.785120673864251*^9, 
   3.785120674286821*^9}, {3.785120749884001*^9, 3.785120751713105*^9}, 
   3.785120898190627*^9, {3.785121455670999*^9, 3.785121488827688*^9}, {
   3.785121537259901*^9, 3.78512157478738*^9}, {3.785121620578435*^9, 
   3.785121671830826*^9}, {3.785123108431879*^9, 3.7851231338341303`*^9}, {
   3.785123163950058*^9, 3.785123260812621*^9}, {3.7851233117107773`*^9, 
   3.785123337526918*^9}, {3.785123384043747*^9, 3.785123477092613*^9}, {
   3.78512352695505*^9, 3.785123670029067*^9}, {3.79430871567951*^9, 
   3.7943087179532433`*^9}, {3.7959419892182903`*^9, 3.795942212550314*^9}, {
   3.7959424056239367`*^9, 3.795942407060606*^9}, {3.795942611546982*^9, 
   3.7959426275439*^9}, {3.7959461675378513`*^9, 3.795946241496098*^9}, {
   3.795946722842165*^9, 3.795946773714357*^9}, {3.795946808229816*^9, 
   3.795946809153041*^9}, {3.796351305621257*^9, 3.796351439389214*^9}, {
   3.846294486617283*^9, 3.846294493536352*^9}, {3.8462945355413933`*^9, 
   3.846294557737678*^9}, {3.846294591612012*^9, 3.84629461451054*^9}, {
   3.8462946751905727`*^9, 3.846294709572811*^9}, 3.846298054465222*^9, {
   3.846298140370872*^9, 3.846298144014412*^9}, {3.8462981981786547`*^9, 
   3.8462982066955023`*^9}, {3.8463031111911287`*^9, 3.846303276950224*^9}, {
   3.846303366224491*^9, 3.846303373394088*^9}, {3.846303414181993*^9, 
   3.846303417907929*^9}, {3.846317185347789*^9, 3.8463171932611103`*^9}, {
   3.846319906497548*^9, 3.846319906633766*^9}, {3.846321463161354*^9, 
   3.8463214632971897`*^9}, {3.846750699939391*^9, 3.846750700823894*^9}, {
   3.848017574902307*^9, 3.8480175842887297`*^9}, {3.848018658923211*^9, 
   3.8480187281736937`*^9}, {3.848019093872747*^9, 3.848019107163273*^9}, {
   3.848019159898847*^9, 3.8480191631198463`*^9}, {3.8480195071367702`*^9, 
   3.848019527760607*^9}, {3.84802063419763*^9, 3.8480206538568907`*^9}, {
   3.848020684605953*^9, 3.848020686952752*^9}, {3.848020777539612*^9, 
   3.848020844882333*^9}, {3.848020885369279*^9, 3.8480209256015053`*^9}, {
   3.84802146276186*^9, 3.8480214651534843`*^9}, {3.848021758579526*^9, 
   3.848021771309462*^9}, {3.848021809804907*^9, 3.84802183051035*^9}, {
   3.848021881458268*^9, 3.8480218843928413`*^9}, 3.848021946041398*^9, {
   3.848022132369475*^9, 3.8480221494917517`*^9}, {3.848024426958679*^9, 
   3.848024458682569*^9}, {3.848024511461404*^9, 3.848024547109029*^9}, {
   3.848033160807172*^9, 3.8480331663260393`*^9}, {3.848040947870017*^9, 
   3.8480409638641977`*^9}, {3.8480411055869217`*^9, 3.848041213582592*^9}, {
   3.848041381831902*^9, 3.848041459511529*^9}, 3.8480423118135157`*^9, {
   3.848051765561474*^9, 3.848051773053854*^9}, {3.850992478492359*^9, 
   3.850992479053226*^9}, {3.856597055485635*^9, 3.8565970555993757`*^9}, {
   3.8565972560495243`*^9, 3.856597256912208*^9}, {3.856597460694787*^9, 
   3.856597461154623*^9}, {3.856601881723135*^9, 3.856601923389752*^9}, {
   3.8566021552256107`*^9, 3.856602163586714*^9}, {3.85660250617203*^9, 
   3.856602647871587*^9}, {3.8566026870030117`*^9, 3.856602693690131*^9}, {
   3.856603261090361*^9, 3.856603261440847*^9}, {3.856603359128941*^9, 
   3.856603416418457*^9}, {3.856606611879463*^9, 3.856606654705258*^9}, {
   3.8566071871342697`*^9, 3.8566072535658617`*^9}, {3.856607500859421*^9, 
   3.8566075039434977`*^9}, {3.856607664281458*^9, 3.8566076841423473`*^9}, {
   3.856608001046813*^9, 3.856608001214386*^9}, {3.856608070701721*^9, 
   3.856608072343639*^9}, {3.856608117449402*^9, 3.856608117561104*^9}, {
   3.856608196382683*^9, 3.856608211198258*^9}, {3.856608302992528*^9, 
   3.8566083055649*^9}, {3.856855229416007*^9, 3.85685524406502*^9}, {
   3.856855361344751*^9, 3.856855361463339*^9}, {3.85685605380376*^9, 
   3.856856054384613*^9}, {3.857009896710269*^9, 3.857009897336082*^9}, {
   3.857099493026442*^9, 3.857099567835099*^9}, {3.857099841829124*^9, 
   3.857099842596938*^9}, {3.857099911423102*^9, 3.857099911984311*^9}, {
   3.857101000781345*^9, 3.857101001526826*^9}, {3.857103008275334*^9, 
   3.857103008412457*^9}, {3.857103230813571*^9, 3.8571032311069*^9}, {
   3.85711278676156*^9, 3.857112813645418*^9}, {3.857113939817651*^9, 
   3.85711394737914*^9}, {3.857114170163334*^9, 3.8571141766155243`*^9}, {
   3.857114306617732*^9, 3.857114306761074*^9}, {3.8571770610613317`*^9, 
   3.857177071772633*^9}, {3.857177660816848*^9, 3.857177670043009*^9}, {
   3.857177706162013*^9, 3.857177727736867*^9}, {3.857177928442452*^9, 
   3.8571779641611032`*^9}, {3.8571791769023457`*^9, 
   3.8571791771274433`*^9}, {3.857180779392385*^9, 3.8571808936384077`*^9}, {
   3.8571812818010473`*^9, 3.8571812944303493`*^9}, {3.857181886870429*^9, 
   3.857181887137871*^9}, {3.857205164351458*^9, 3.857205222417026*^9}, {
   3.85761448437498*^9, 3.8576144845376387`*^9}, {3.857630428020631*^9, 
   3.857630449902113*^9}, {3.857632832265251*^9, 3.857632836012987*^9}, {
   3.8576328929953613`*^9, 3.857632919869681*^9}, {3.857632956308547*^9, 
   3.857632956456862*^9}, {3.857633379290094*^9, 3.857633383499827*^9}, {
   3.857633574314172*^9, 3.857633576776931*^9}, {3.858305269072668*^9, 
   3.8583052866140823`*^9}, {3.858917154577447*^9, 3.8589171563714857`*^9}, {
   3.85891836221336*^9, 3.858918373190249*^9}, {3.8589184882731037`*^9, 
   3.858918497756524*^9}, {3.858918886106083*^9, 3.85891898805793*^9}, {
   3.861326192770048*^9, 3.861326346770693*^9}, {3.861952000788783*^9, 
   3.861952004391736*^9}, {3.861952117355052*^9, 3.861952128092889*^9}, {
   3.861952465220364*^9, 3.86195248601506*^9}, {3.861952605038127*^9, 
   3.86195263461609*^9}, {3.861952884353322*^9, 3.861952960768404*^9}, {
   3.861953209978606*^9, 3.861953218897624*^9}, {3.8619534969980516`*^9, 
   3.8619535030148153`*^9}, {3.862023764114911*^9, 3.862023766549774*^9}, {
   3.893123830194334*^9, 3.89312383176791*^9}, {3.893124184607633*^9, 
   3.893124208333317*^9}, {3.8931244675296307`*^9, 3.893124514760222*^9}, {
   3.893124556106244*^9, 3.893124556786525*^9}, {3.893219579212366*^9, 
   3.893219579732017*^9}, 3.893221034016053*^9, {3.8932272288004827`*^9, 
   3.893227273539093*^9}, {3.8932274597206306`*^9, 3.89322746456682*^9}, {
   3.893238107100025*^9, 3.89323814142802*^9}, {3.893238188345695*^9, 
   3.893238252818037*^9}, {3.893238412862928*^9, 3.893238416307515*^9}, {
   3.8932388352071257`*^9, 3.893238905753147*^9}, {3.896235722662436*^9, 
   3.896235726044341*^9}, {3.904716408212809*^9, 3.904716434763536*^9}, {
   3.904716466787817*^9, 3.904716525443079*^9}, {3.904716589681278*^9, 
   3.904716647936803*^9}, {3.904716834506065*^9, 3.904716842981513*^9}, {
   3.904716876433951*^9, 3.904716887270356*^9}, {3.904716936075522*^9, 
   3.904716959743822*^9}, {3.90471734146594*^9, 3.904717344925549*^9}, {
   3.90471746539174*^9, 3.904717466294065*^9}, {3.904717902878501*^9, 
   3.90471790662507*^9}, {3.904728016051351*^9, 3.904728022795042*^9}, {
   3.904728062492099*^9, 3.904728064086751*^9}, {3.90478248033889*^9, 
   3.904782522703725*^9}, {3.904782577736558*^9, 3.904782617966322*^9}, {
   3.9047828516351748`*^9, 3.904782908124851*^9}, {3.904782971288205*^9, 
   3.904783023097156*^9}, 3.9047835272238894`*^9, {3.904784706944055*^9, 
   3.904784732130807*^9}, {3.904784764144229*^9, 3.904784850625926*^9}, {
   3.904791690966425*^9, 3.904791713683258*^9}, {3.904791785995915*^9, 
   3.9047917861591454`*^9}, {3.9047920401110773`*^9, 3.904792040549292*^9}, {
   3.904795334858088*^9, 3.9047953350171013`*^9}, {3.904795441609927*^9, 
   3.904795458397972*^9}, {3.9047955527099667`*^9, 3.904795557322884*^9}, 
   3.904795599558613*^9, {3.90479564448558*^9, 3.904795749363257*^9}, {
   3.904806416700275*^9, 3.904806441961385*^9}, {3.904806503071747*^9, 
   3.904806507589088*^9}, {3.904806537826413*^9, 3.904806641549863*^9}, {
   3.9048068412172947`*^9, 3.904806870904914*^9}, {3.904806908304204*^9, 
   3.9048069244018393`*^9}, {3.904807060863275*^9, 3.9048070663691196`*^9}, 
   3.904807538293371*^9, {3.904807973627405*^9, 3.904808058527809*^9}, {
   3.9048990632230673`*^9, 3.90489915160332*^9}, {3.904899376027144*^9, 
   3.904899412842327*^9}, {3.904899446151391*^9, 3.9048994775828867`*^9}, {
   3.904899620310107*^9, 3.904899630900058*^9}, {3.904900414877574*^9, 
   3.904900418157701*^9}, 3.904900482449148*^9, {3.90490052574929*^9, 
   3.904900560248372*^9}, {3.904900592243074*^9, 3.9049006223904*^9}, {
   3.904900708583803*^9, 3.90490071511837*^9}, {3.904901020849496*^9, 
   3.904901021098115*^9}, {3.904901115675465*^9, 3.904901118179572*^9}, {
   3.904901175118979*^9, 3.9049011753384247`*^9}, {3.904901295804331*^9, 
   3.904901295948503*^9}, {3.9049014860474453`*^9, 3.904901486250215*^9}, {
   3.9049028670017138`*^9, 3.904902874683324*^9}, {3.904903448736684*^9, 
   3.9049035354363117`*^9}, {3.904904004206993*^9, 3.904904013190302*^9}, {
   3.904904768269182*^9, 3.9049047768161077`*^9}, {3.9049559819784117`*^9, 
   3.904956019333149*^9}, {3.904956054105917*^9, 3.904956138783165*^9}, {
   3.904956579736432*^9, 3.904956681252227*^9}, {3.9049567675370483`*^9, 
   3.9049567692746077`*^9}, 3.904956812619152*^9, {3.9049569595880117`*^9, 
   3.904956983212133*^9}, {3.904957084271639*^9, 3.904957154604073*^9}, {
   3.904957225603723*^9, 3.9049572588083*^9}, {3.904957306617958*^9, 
   3.904957307044098*^9}, {3.904957596213276*^9, 3.904957681476347*^9}, {
   3.90495776367632*^9, 3.904957988165844*^9}, {3.9049580364809313`*^9, 
   3.9049582759978657`*^9}, {3.9049667376919203`*^9, 3.904966745721897*^9}, {
   3.904966789153091*^9, 3.904966816715804*^9}, {3.9049669186954*^9, 
   3.904966925960202*^9}, {3.905309391735647*^9, 3.905309442719812*^9}, {
   3.9053095421503057`*^9, 3.905309552230679*^9}, {3.905309600607924*^9, 
   3.905309614411858*^9}, {3.905309648990522*^9, 3.905309666981956*^9}, {
   3.905309951687799*^9, 3.905309967000381*^9}, {3.905310000709545*^9, 
   3.905310029802944*^9}, {3.905311091707696*^9, 3.905311091895042*^9}, {
   3.905311131383996*^9, 3.9053111317413692`*^9}, {3.905311282620409*^9, 
   3.905311301727127*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"80b9b190-58cd-4a17-a2ca-c826e95114c5"],

Cell[TextData[StyleBox["Energy tests", "Section"]], "Text",
 CellChangeTimes->{{3.9049616223763943`*^9, 3.904961623165934*^9}, {
  3.904961717920315*^9, 3.904961726084875*^9}, {3.904961760820051*^9, 
  3.904961829930037*^9}},
 CellTags->
  "energyTests",ExpressionUUID->"c00cd5e5-482e-4c2a-9fb1-a2d886a083e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testEnergy", "[", 
    RowBox[{
    "meta_", ",", "id_", ",", "infunc_", ",", "opfunc_", ",", "name_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"outprec", " ", "=", " ", "32"}], ",", "i", ",", "nN", ",", 
       "gridN", ",", "ls", ",", "descr", ",", " ", "in", ",", "inI", ",", 
       "inR", ",", "ref", ",", "msg", ",", "tempmsg", ",", "fbase", ",", 
       "fname", ",", 
       RowBox[{"tFunc", "=", 
        RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nN", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridN", " ", "=", " ", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ls", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fbase", "=", 
       RowBox[{"name", "<>", "\"\<_id\>\"", "<>", 
        RowBox[{"ToString", "[", "id", "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"msg", "=", 
       RowBox[{
       "\"\<Exporting \>\"", "<>", "name", "<>", 
        "\"\< Worland operator for N = \>\"", "<>", 
        RowBox[{"ToString", "[", "nN", "]"}], "<>", "\"\<, Ng = \>\"", " ", "<>", 
        RowBox[{"ToString", "[", "gridN", "]"}], "<>", "\"\<, l = \>\"", "<>", 
        RowBox[{"ToString", "[", "ls", "]"}], "<>", "\"\<...\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "meta", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"fname", "=", 
       RowBox[{"fbase", "<>", "\"\<_meta.dat\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"descr", "=", 
       RowBox[{"createMetadata", "[", 
        RowBox[{"nN", ",", "gridN", ",", "ls", ",", "tFunc"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}], 
         "]"}], ",", "descr"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "input", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"generateInData", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"inR", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"infunc", "[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", 
              RowBox[{"nN", "-", "1"}], ",", 
              RowBox[{"ls", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", "tFunc"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"inI", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"infunc", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", 
               RowBox[{"nN", "-", "1"}], ",", 
               RowBox[{"ls", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", "tFunc"}], "]"}]}], ",", 
            
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"in", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"inR", ",", "inI"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_in.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "in"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "output", " ", "referece"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"generateInData", "&&", "generateRefData"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ref", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{"Simplify", "[", 
               RowBox[{
                SuperscriptBox["r", "2"], 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"inR", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"inI", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], 
                    "\[ImaginaryI]"}]}], ")"}], 
                    RowBox[{"opfunc", "[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", 
                    RowBox[{"ls", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "r"}], "]"}]}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}], "]"}],
                  "2"]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ref", "=", 
          RowBox[{"N", "[", 
           RowBox[{"ref", ",", "outprec"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_ref.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "ref"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"msg", ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\< Done(\>\"", "<>", 
             RowBox[{"DateString", "[", "]"}], "<>", "\"\<)\>\""}], ",", 
            RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}]}], "}"}], 
        "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "testEnergy", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"truncationFunc", "->", "uniformTruncation"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.848017698780747*^9, 3.84801776313531*^9}, {
   3.848017798447256*^9, 3.8480178605867577`*^9}, {3.848017891385507*^9, 
   3.848017892128298*^9}, {3.848017950663685*^9, 3.848018085579118*^9}, {
   3.848018185225028*^9, 3.848018216286313*^9}, {3.848018263084585*^9, 
   3.848018288123901*^9}, {3.848018372003317*^9, 3.8480183930138206`*^9}, {
   3.848018428487753*^9, 3.8480186442787437`*^9}, {3.8480187418926153`*^9, 
   3.8480187870736313`*^9}, {3.8480188477606564`*^9, 3.848018995329522*^9}, {
   3.8480190345700607`*^9, 3.848019036141389*^9}, {3.8480191390729847`*^9, 
   3.848019139393527*^9}, {3.8480194112013903`*^9, 3.848019424433836*^9}, {
   3.8480194738245583`*^9, 3.848019489091062*^9}, {3.8480195369328413`*^9, 
   3.848019537072456*^9}, {3.848019690443809*^9, 3.8480196978133163`*^9}, {
   3.848019794340355*^9, 3.848019816518342*^9}, {3.8480201156057167`*^9, 
   3.848020147975754*^9}, {3.848020209758589*^9, 3.8480202224473877`*^9}, {
   3.8480202811898937`*^9, 3.8480202850137987`*^9}, {3.848020364727631*^9, 
   3.8480203857963543`*^9}, {3.84802101514612*^9, 3.848021108473736*^9}, {
   3.8480213567626543`*^9, 3.848021357725465*^9}, {3.848021457523973*^9, 
   3.848021457822734*^9}, {3.848021506230721*^9, 3.848021506529318*^9}, {
   3.848021573127754*^9, 3.848021622641509*^9}, {3.84802178154181*^9, 
   3.848021805931086*^9}, {3.84802185867463*^9, 3.848021858951*^9}, {
   3.84802189114817*^9, 3.848021898036561*^9}, {3.8480220198629293`*^9, 
   3.8480220524001102`*^9}, {3.848022095444131*^9, 3.848022102776581*^9}, {
   3.8480243407835073`*^9, 3.8480243506705236`*^9}, {3.848024388279482*^9, 
   3.848024420614203*^9}, {3.848024471796319*^9, 3.8480245066473627`*^9}, {
   3.848033237518343*^9, 3.848033255802588*^9}, {3.8509925648200407`*^9, 
   3.850992582392846*^9}, {3.858917421717351*^9, 3.858917433752697*^9}, 
   3.85891748005223*^9, 3.8589177342241497`*^9, {3.858935981195907*^9, 
   3.858936019127369*^9}, {3.8589362314369717`*^9, 3.858936298825235*^9}, {
   3.858936412257574*^9, 3.8589364128684483`*^9}, {3.893124224351309*^9, 
   3.893124381866654*^9}, {3.8931246230511227`*^9, 3.8931246686754913`*^9}, {
   3.893124701689742*^9, 3.893124828476371*^9}, {3.893125065477269*^9, 
   3.8931250707736692`*^9}, {3.8931307257458773`*^9, 3.893130725989131*^9}, {
   3.893238265263715*^9, 3.893238292037168*^9}, {3.893238802446642*^9, 
   3.893238804782196*^9}, {3.9047857474971237`*^9, 3.904785790272232*^9}, {
   3.904785822933461*^9, 3.904785829257056*^9}, {3.904885340598053*^9, 
   3.904885345388011*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"a3e8b1ff-bfff-44a2-9c5b-9061ba712f80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateEnergies", "[", 
    RowBox[{"meta_", ",", "tId_", ",", "inOp_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tFunc", "=", 
       RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"configureGenerator", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "genIn", "]"}], ",", 
        RowBox[{"OptionValue", "[", "genRef", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testEnergy", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "Wnl", ",", 
        "\"\<Reductor/EnergyR2\>\"", ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testEnergy", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "divrWnl", ",", 
        "\"\<Reductor/Energy\>\"", ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testEnergy", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "divrdrWnl", ",", 
        "\"\<Reductor/EnergyD1R1\>\"", ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testEnergy", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "slaplWnl", ",", 
        "\"\<Reductor/EnergySLaplR2\>\"", ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "generateEnergies", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"truncationFunc", "->", "uniformTruncation"}], ",", 
     RowBox[{"genIn", "->", "False"}], ",", " ", 
     RowBox[{"genRef", "->", "False"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.848042176475418*^9, 3.848042212835396*^9}, {
   3.848042269123073*^9, 3.848042281490758*^9}, {3.876364788279221*^9, 
   3.876364789271266*^9}, {3.8932383066971703`*^9, 3.8932383129624662`*^9}, {
   3.8932384068755503`*^9, 3.893238408487183*^9}, {3.904785887209717*^9, 
   3.904785907480207*^9}, {3.904786022120563*^9, 3.9047860419334497`*^9}, {
   3.904786217229299*^9, 3.904786217557233*^9}, 3.904786253746027*^9, {
   3.904905229466876*^9, 3.904905247988224*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"ddfd4e30-31a2-4d4a-a48f-22d7b5376f38"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxL", "=", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genTags", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setups", "=", 
   RowBox[{"{", 
    RowBox[{"uniformSetup", ",", "triangularSetup"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectra", "=", 
   RowBox[{"{", 
    RowBox[{
    "minSpectrum", ",", "maxSpectrum", ",", "unitSpectrum", ",", 
     "randSpectrum"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"it", "=", "1"}], ",", 
    RowBox[{"it", "<=", " ", 
     RowBox[{"Length", "[", "spectra", "]"}]}], ",", 
    RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"StringRepeat", "[", 
       RowBox[{"\"\<%\>\"", ",", "50"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<%%% Generating data with \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"spectra", "[", 
         RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\< spectrum\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"is", " ", "=", " ", "1"}], ",", 
       RowBox[{"is", "<=", " ", 
        RowBox[{"Length", "[", "setups", "]"}]}], ",", 
       RowBox[{"is", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"id", "=", 
         RowBox[{
          RowBox[{"1000", 
           RowBox[{"(", 
            RowBox[{"is", "-", "1"}], ")"}]}], "+", 
          RowBox[{"(", 
           RowBox[{"it", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<--- Generating data with \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"setups", "[", 
            RowBox[{"[", "is", "]"}], "]"}], "]"}], "<>", 
          "\"\< truncation, id = \>\"", "<>", 
          RowBox[{"ToString", "[", "id", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", "tFunc"}], "}"}], "=", 
         RowBox[{
          RowBox[{"setups", "[", 
           RowBox[{"[", "is", "]"}], "]"}], "[", "maxL", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"meta", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3", ",", "8", ",", "maxL"}], "}"}]}],
           "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"generateEnergies", "[", 
         RowBox[{"meta", ",", "id", ",", 
          RowBox[{"spectra", "[", 
           RowBox[{"[", "it", "]"}], "]"}], ",", 
          RowBox[{"truncationFunc", "->", "tFunc"}], ",", " ", 
          RowBox[{"genIn", "->", 
           RowBox[{
            RowBox[{"genTags", "[", 
             RowBox[{"[", "is", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
          RowBox[{"genRef", "->", 
           RowBox[{
            RowBox[{"genTags", "[", 
             RowBox[{"[", "is", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "setups", ",", "it", ",", "spectra", ",", "is", ",", "maxL", ",", "nN", ",",
    "nR", ",", "tFunc", ",", "meta", ",", "id"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9049583752399273`*^9, 3.904958377569257*^9}, {
  3.904958462522399*^9, 3.904958584990696*^9}, {3.90495863717201*^9, 
  3.904958793717187*^9}, {3.904958829118566*^9, 3.904958929147781*^9}, {
  3.9049589757555103`*^9, 3.904959004413563*^9}, {3.904959046233138*^9, 
  3.904959063411928*^9}, {3.90495912470195*^9, 3.904959219640109*^9}, {
  3.904959283694828*^9, 3.9049593830374603`*^9}, {3.90496803542878*^9, 
  3.9049680384693527`*^9}, {3.904977668265995*^9, 3.904977672496541*^9}, {
  3.904979508219589*^9, 3.904979509762488*^9}, {3.904980352425243*^9, 
  3.904980419949622*^9}, {3.9049825723545513`*^9, 3.904982576899819*^9}, {
  3.9052380962944202`*^9, 3.905238143998477*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"9f420c4d-d8f0-431e-9aa9-dbce070c91bb"],

Cell[TextData[StyleBox["Projector tests", "Section"]], "Text",
 CellChangeTimes->{{3.9049616223763943`*^9, 3.904961623165934*^9}, {
  3.904961717920315*^9, 3.904961726084875*^9}, {3.904961760820051*^9, 
  3.904961819613763*^9}},
 CellTags->
  "projectorTests",ExpressionUUID->"2c44427c-f971-40d1-adec-d45b533151f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testProjector", "[", 
    RowBox[{
    "meta_", ",", "id_", ",", "infunc_", ",", "gfunc_", ",", "opfunc_", ",", 
     "name_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"outprec", " ", "=", " ", "32"}], ",", "i", ",", "nN", ",", 
       "gridN", ",", "ls", ",", "descr", ",", " ", "in", ",", "inR", ",", 
       "inI", ",", "grid", ",", "zg", ",", "ref", ",", "refR", ",", "refI", 
       ",", "msg", ",", "tempmsg", ",", "fbase", ",", "fname", ",", 
       RowBox[{"tFunc", "=", 
        RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nN", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridN", " ", "=", " ", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ls", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fbase", "=", 
       RowBox[{"name", "<>", "\"\<_id\>\"", "<>", 
        RowBox[{"ToString", "[", "id", "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"msg", "=", 
       RowBox[{
       "\"\<Exporting \>\"", "<>", "name", "<>", 
        "\"\< Worland operator for N = \>\"", "<>", 
        RowBox[{"ToString", "[", "nN", "]"}], "<>", "\"\<, Ng = \>\"", " ", "<>", 
        RowBox[{"ToString", "[", "gridN", "]"}], "<>", "\"\<, l = \>\"", "<>", 
        RowBox[{"ToString", "[", "ls", "]"}], "<>", "\"\<...\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "meta", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"fname", "=", 
       RowBox[{"fbase", "<>", "\"\<_meta.dat\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"descr", "=", 
       RowBox[{"createMetadata", "[", 
        RowBox[{"nN", ",", "gridN", ",", "ls", ",", "tFunc"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}], 
         "]"}], ",", "descr"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "input", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"generateInData", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"inR", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"infunc", "[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", 
              RowBox[{"nN", "-", "1"}], ",", 
              RowBox[{"ls", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", "tFunc"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"inI", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"infunc", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"nN", "-", "1"}], ",", 
                 RowBox[{"ls", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"inI", " ", "=", " ", 
          RowBox[{"-", "inR"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"in", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"inR", ",", "inI"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_in.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "in", ",", "\"\<Table\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "reference", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"generateInData", "&&", "generateRefData"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"inR", "=", 
          RowBox[{"SetPrecision", "[", 
           RowBox[{"inR", ",", "mpprec"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"grid", " ", "=", " ", 
          RowBox[{"gfunc", "[", "gridN", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"zg", " ", "=", " ", 
          RowBox[{"0", "grid"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"refR", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"inR", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], "!=", "0"}], ",", 
                RowBox[{
                 RowBox[{"inR", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], 
                 RowBox[{"opfunc", "[", 
                  RowBox[{
                   RowBox[{"i", "-", "1"}], ",", 
                   RowBox[{"ls", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], 
                ",", "zg"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"refI", "=", 
            RowBox[{"ParallelTable", "[", 
             RowBox[{
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"inI", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], 
                 RowBox[{"opfunc", "[", 
                  RowBox[{
                   RowBox[{"i", "-", "1"}], ",", 
                   RowBox[{"ls", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"refI", "=", 
          RowBox[{"-", "refR"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ref", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "refR", "]"}], ",", 
            RowBox[{"Transpose", "[", "refI", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ref", "=", 
          RowBox[{"N", "[", 
           RowBox[{"ref", ",", "outprec"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_ref.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "ref", ",", "\"\<Table\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"msg", ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\< Done(\>\"", "<>", 
             RowBox[{"DateString", "[", "]"}], "<>", "\"\<)\>\""}], ",", 
            RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}]}], "}"}], 
        "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "testProjector", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"truncationFunc", "->", "uniformTruncation"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.848032778505186*^9, 3.848032779555841*^9}, {
   3.8480328783581*^9, 3.8480329137747507`*^9}, {3.848032944998589*^9, 
   3.8480330010793667`*^9}, {3.848033189111826*^9, 3.848033212739254*^9}, {
   3.8480341867790413`*^9, 3.848034287663869*^9}, {3.848034360047772*^9, 
   3.848034398406781*^9}, {3.848034502838904*^9, 3.848034518389909*^9}, {
   3.8480350564057426`*^9, 3.848035057874421*^9}, {3.848035930081814*^9, 
   3.848035933788911*^9}, {3.8480359702355547`*^9, 3.848035997252914*^9}, {
   3.848036067081504*^9, 3.8480360678036947`*^9}, {3.848036132898159*^9, 
   3.848036183304658*^9}, {3.848036217392887*^9, 3.848036220494136*^9}, {
   3.8509925907780523`*^9, 3.850992612402049*^9}, {3.862016359409348*^9, 
   3.8620163850268106`*^9}, {3.893130733265263*^9, 3.893130819187681*^9}, {
   3.8931309409046097`*^9, 3.893130943377282*^9}, 3.893225667615535*^9, {
   3.893225966206915*^9, 3.8932260453751907`*^9}, {3.893226231196495*^9, 
   3.8932262371804028`*^9}, {3.8932264565997953`*^9, 3.893226479600665*^9}, {
   3.893227302472652*^9, 3.893227319070147*^9}, {3.893227419227109*^9, 
   3.893227440678981*^9}, {3.89322751761345*^9, 3.893227522164261*^9}, {
   3.893238335051752*^9, 3.8932383572072773`*^9}, {3.8932387928174353`*^9, 
   3.893238795617341*^9}, {3.9047852949419537`*^9, 3.904785332258746*^9}, {
   3.904785526768641*^9, 3.904785600552713*^9}, {3.904817683615819*^9, 
   3.904817691053028*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"31fc3550-3bf0-43e2-8fee-f08bb62def68"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateProjectors", "[", 
    RowBox[{"meta_", ",", "tId_", ",", "inOp_", ",", "gfunc_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"subdir", ",", 
       RowBox[{"tFunc", "=", 
        RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"configureGenerator", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "genIn", "]"}], ",", 
        RowBox[{"OptionValue", "[", "genRef", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"subdir", "=", "\"\<Projector/\>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{"meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<P\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", "divrWnl", ",", 
        RowBox[{"subdir", "<>", "\"\<DivR1\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", "dWnl", ",", 
        RowBox[{"subdir", "<>", "\"\<D1\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", "divrdrWnl", ",", 
        RowBox[{"subdir", "<>", "\"\<DivR1D1R1\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", "slaplWnl", ",", 
        RowBox[{"subdir", "<>", "\"\<SphLapl\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", "drWnl", ",", 
        RowBox[{"subdir", "<>", "\"\<D1R1\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", "claplhWnl", ",", 
        RowBox[{"subdir", "<>", "\"\<CylLaplh\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", "dclaplhWnl", ",", 
        
        RowBox[{"subdir", "<>", "\"\<D1CylLaplh\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", "divrclaplhWnl", 
        ",", 
        RowBox[{"subdir", "<>", "\"\<DivR1CylLaplh\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", "divrWnlzeroWnl", 
        ",", 
        RowBox[{"subdir", "<>", "\"\<DivR1_Zero\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", "dWnlWnl", ",", 
        RowBox[{"subdir", "<>", "\"\<D1_P\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", "divrdrWnlzeroWnl",
         ",", 
        RowBox[{"subdir", "<>", "\"\<DivR1D1R1_Zero\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", 
        "claplhWnldivrdrWnl", ",", 
        RowBox[{"subdir", "<>", "\"\<CylLaplh_DivR1D1R1\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", 
        "dclaplhWnlddivrdrWnl", ",", 
        RowBox[{"subdir", "<>", "\"\<D1CylLaplh_D1DivR1D1R1\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", 
        "divrclaplhWnlzeroWnl", ",", 
        RowBox[{"subdir", "<>", "\"\<DivR1CylLaplh_Zero\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "generateProjectors", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"truncationFunc", "->", "uniformTruncation"}], ",", 
     RowBox[{"genIn", "->", "False"}], ",", " ", 
     RowBox[{"genRef", "->", "False"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8480417499460173`*^9, 3.848041751710577*^9}, {
  3.848041917107429*^9, 3.848042069705041*^9}, {3.848042104298834*^9, 
  3.8480421047567987`*^9}, {3.8480519574942636`*^9, 3.848052001991641*^9}, {
  3.862022383619041*^9, 3.862022526314904*^9}, {3.893238378235244*^9, 
  3.893238401943779*^9}, {3.904786397734943*^9, 3.9047864699508953`*^9}, {
  3.904899680643591*^9, 3.904899682891835*^9}, {3.904899728891234*^9, 
  3.904899772969664*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"7c482c21-a52e-42d4-8b0f-e877f4cb018c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxL", "=", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genTags", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setups", "=", 
   RowBox[{"{", 
    RowBox[{"uniformSetup", ",", "triangularSetup"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectra", "=", 
   RowBox[{"{", 
    RowBox[{
    "minSpectrum", ",", "maxSpectrum", ",", "unitSpectrum", ",", 
     "randSpectrum"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"it", "=", "1"}], ",", 
    RowBox[{"it", "<=", " ", 
     RowBox[{"Length", "[", "spectra", "]"}]}], ",", 
    RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"StringRepeat", "[", 
       RowBox[{"\"\<%\>\"", ",", "50"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<%%% Generating data with \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"spectra", "[", 
         RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\< spectrum\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", " ", 
      RowBox[{
       RowBox[{"is", " ", "=", " ", "1"}], ",", 
       RowBox[{"is", "<=", " ", 
        RowBox[{"Length", "[", "setups", "]"}]}], ",", 
       RowBox[{"is", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"id", "=", 
         RowBox[{
          RowBox[{"1000", 
           RowBox[{"(", 
            RowBox[{"is", "-", "1"}], ")"}]}], "+", 
          RowBox[{"(", 
           RowBox[{"it", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<--- Generating data with \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"setups", "[", 
            RowBox[{"[", "is", "]"}], "]"}], "]"}], "<>", 
          "\"\< truncation, id = \>\"", "<>", 
          RowBox[{"ToString", "[", "id", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", "tFunc"}], "}"}], "=", 
         RowBox[{
          RowBox[{"setups", "[", 
           RowBox[{"[", "is", "]"}], "]"}], "[", "maxL", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"meta", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "2", ",", "3", ",", "8", ",", "maxL"}], 
            "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"generateProjectors", "[", 
         RowBox[{"meta", ",", "id", ",", 
          RowBox[{"spectra", "[", 
           RowBox[{"[", "it", "]"}], "]"}], ",", "wgrid", ",", 
          RowBox[{"truncationFunc", "->", "tFunc"}], ",", " ", 
          RowBox[{"genIn", "->", 
           RowBox[{
            RowBox[{"genTags", "[", 
             RowBox[{"[", "is", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
          RowBox[{"genRef", "->", 
           RowBox[{
            RowBox[{"genTags", "[", 
             RowBox[{"[", "is", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "setups", ",", "it", ",", "spectra", ",", "is", ",", "maxL", ",", "nN", ",",
    "nR", ",", "tFunc", ",", "meta", ",", "id", ",", "genTags"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9049583752399273`*^9, 3.904958377569257*^9}, {
  3.904958462522399*^9, 3.904958584990696*^9}, {3.90495863717201*^9, 
  3.904958793717187*^9}, {3.904958829118566*^9, 3.904958929147781*^9}, {
  3.9049589757555103`*^9, 3.904959004413563*^9}, {3.904959046233138*^9, 
  3.904959063411928*^9}, {3.90495912470195*^9, 3.904959219640109*^9}, {
  3.904959283694828*^9, 3.9049593830374603`*^9}, {3.9049594394283113`*^9, 
  3.904959521153838*^9}, {3.9049605118621283`*^9, 3.904960513555192*^9}, {
  3.904966492927514*^9, 3.904966493118615*^9}, {3.904980719286388*^9, 
  3.9049807408894567`*^9}, {3.9049866692471027`*^9, 3.9049866708157597`*^9}, {
  3.905238169727084*^9, 3.905238190037718*^9}, {3.905238519205596*^9, 
  3.9052385206213417`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"d9617641-8504-45cc-8592-bc7e2e09b8ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateDbProjectors", "[", 
    RowBox[{"meta_", ",", "tId_", ",", "inOp_", ",", "gfunc_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"subdir", ",", 
       RowBox[{"tFunc", "=", 
        RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"configureGenerator", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "genIn", "]"}], ",", 
        RowBox[{"OptionValue", "[", "genRef", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"subdir", "=", "\"\<Projector/\>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testProjector", "[", 
       RowBox[{"meta", ",", "tId", ",", "inOp", ",", "gfunc", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<P\>\""}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "generateDbProjectors", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"truncationFunc", "->", "uniformTruncation"}], ",", 
     RowBox[{"genIn", "->", "False"}], ",", 
     RowBox[{"genRef", "->", "False"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8620160534036303`*^9, 3.862016159656583*^9}, 
   3.862016438759507*^9, {3.893219506830196*^9, 3.893219509989716*^9}, {
   3.893221059332869*^9, 3.8932210595910788`*^9}, {3.8932256084366903`*^9, 
   3.8932256333366737`*^9}, {3.8932258123580112`*^9, 3.893225865015296*^9}, {
   3.893226086162138*^9, 3.893226086324325*^9}, {3.893226247954844*^9, 
   3.893226248090509*^9}, {3.893226501395748*^9, 3.893226501691586*^9}, {
   3.893227159344455*^9, 3.893227170776334*^9}, {3.893227336951681*^9, 
   3.893227409428813*^9}, {3.893227495505295*^9, 3.8932274984474916`*^9}, {
   3.893238441506835*^9, 3.893238452786875*^9}, {3.904785360301064*^9, 
   3.9047854612418633`*^9}, {3.904785499949646*^9, 3.904785501188499*^9}, {
   3.904785689152267*^9, 3.904785689344431*^9}, 3.9048162611394167`*^9, 
   3.904817759488121*^9, {3.904886023471702*^9, 3.9048860399526567`*^9}, {
   3.904904819784761*^9, 3.904904824074379*^9}, {3.9049048640721397`*^9, 
   3.9049049166992292`*^9}, {3.9049050395653143`*^9, 3.904905051358252*^9}, {
   3.90490509088834*^9, 3.9049050917751083`*^9}, {3.90495959088622*^9, 
   3.904959652856584*^9}, {3.90495968888876*^9, 3.9049598419921417`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"27dfe1dc-3d74-4c2a-a018-c8cb4b4290fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genTags", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setups", "=", 
   RowBox[{"{", 
    RowBox[{"uniformSetup", ",", "triangularSetup"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectra", "=", 
   RowBox[{"{", "randSpectrum", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"it", "=", "1"}], ",", 
    RowBox[{"it", "<=", " ", 
     RowBox[{"Length", "[", "spectra", "]"}]}], ",", 
    RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"StringRepeat", "[", 
       RowBox[{"\"\<%\>\"", ",", "50"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<%%% Generating data with \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"spectra", "[", 
         RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\< spectrum\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", " ", 
      RowBox[{
       RowBox[{"is", " ", "=", " ", "1"}], ",", 
       RowBox[{"is", "<=", " ", 
        RowBox[{"Length", "[", "setups", "]"}]}], ",", 
       RowBox[{"is", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", " ", 
         RowBox[{
          RowBox[{"p", " ", "=", " ", "9"}], ",", 
          RowBox[{"p", "<", "12"}], ",", 
          RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"id", "=", 
            RowBox[{
             RowBox[{"1000", 
              RowBox[{"(", 
               RowBox[{"is", "-", "1"}], ")"}]}], "+", 
             RowBox[{"100", "it"}], "+", "p"}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"Print", "[", 
            RowBox[{"\"\<--- Generating data with \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"setups", "[", 
               RowBox[{"[", "is", "]"}], "]"}], "]"}], "<>", 
             "\"\< truncation, id = \>\"", "<>", 
             RowBox[{"ToString", "[", "id", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"maxL", "=", 
            RowBox[{
             SuperscriptBox["2", "p"], "-", "1"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"nN", ",", "nR", ",", "tFunc"}], "}"}], "=", 
            RowBox[{
             RowBox[{"setups", "[", 
              RowBox[{"[", "is", "]"}], "]"}], "[", "maxL", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"meta", "=", 
            RowBox[{"{", 
             RowBox[{"nN", ",", "nR", ",", 
              RowBox[{"Table", "[", 
               RowBox[{"l", ",", 
                RowBox[{"{", 
                 RowBox[{"l", ",", "0", ",", "maxL"}], "}"}]}], "]"}]}], 
             "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"generateDbProjectors", "[", 
            RowBox[{"meta", ",", "id", ",", 
             RowBox[{"spectra", "[", 
              RowBox[{"[", "it", "]"}], "]"}], ",", "wgrid", ",", 
             RowBox[{"truncationFunc", "->", "tFunc"}], ",", 
             RowBox[{"genIn", "->", 
              RowBox[{
               RowBox[{"genTags", "[", 
                RowBox[{"[", "is", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"genRef", "->", 
              RowBox[{
               RowBox[{"genTags", "[", 
                RowBox[{"[", "is", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Clear", "[", 
            RowBox[{"nL", ",", "nN", ",", "nR", ",", "tFunc", ",", "meta"}], 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "setups", ",", "it", ",", "spectra", ",", "is", ",", "maxL", ",", "nN", ",",
    "nR", ",", "tFunc", ",", "meta", ",", "id", ",", "genTags"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8620160534036303`*^9, 3.862016159656583*^9}, 
   3.862016438759507*^9, {3.893219506830196*^9, 3.893219509989716*^9}, {
   3.893221059332869*^9, 3.8932210595910788`*^9}, {3.8932256084366903`*^9, 
   3.8932256333366737`*^9}, {3.8932258123580112`*^9, 3.893225865015296*^9}, {
   3.893226086162138*^9, 3.893226086324325*^9}, {3.893226247954844*^9, 
   3.893226248090509*^9}, {3.893226501395748*^9, 3.893226501691586*^9}, {
   3.893227159344455*^9, 3.893227170776334*^9}, {3.893227336951681*^9, 
   3.893227409428813*^9}, {3.893227495505295*^9, 3.8932274984474916`*^9}, {
   3.893238441506835*^9, 3.893238452786875*^9}, {3.904785360301064*^9, 
   3.9047854612418633`*^9}, {3.904785499949646*^9, 3.904785501188499*^9}, {
   3.904785689152267*^9, 3.904785689344431*^9}, 3.9048162611394167`*^9, 
   3.904817759488121*^9, {3.904886023471702*^9, 3.9048860399526567`*^9}, {
   3.904904819784761*^9, 3.904904824074379*^9}, {3.9049048640721397`*^9, 
   3.9049049166992292`*^9}, {3.9049050395653143`*^9, 3.904905051358252*^9}, {
   3.90490509088834*^9, 3.9049050917751083`*^9}, {3.90495959088622*^9, 
   3.904959652856584*^9}, {3.90495968888876*^9, 3.904959889548525*^9}, {
   3.9049599212939997`*^9, 3.9049600278809443`*^9}, {3.904960124108971*^9, 
   3.904960126609001*^9}, {3.9049602008607616`*^9, 3.9049602199742527`*^9}, {
   3.904960505500359*^9, 3.904960506061445*^9}, {3.904980745407693*^9, 
   3.9049807667483*^9}, {3.9049866890621157`*^9, 3.90498669076719*^9}, {
   3.9052464274193287`*^9, 3.905246452063628*^9}, {3.90524752462409*^9, 
   3.905247535286584*^9}, {3.9053259321213417`*^9, 3.9053259428426237`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"f3cb6e60-f48f-43ce-aaf7-982cbc334e56"],

Cell[TextData[StyleBox["Integrator tests", "Section"]], "Text",
 CellChangeTimes->{{3.9049616223763943`*^9, 3.904961623165934*^9}, {
  3.904961717920315*^9, 3.904961726084875*^9}, {3.904961760820051*^9, 
  3.9049618063959913`*^9}},
 CellTags->
  "integratorTests",ExpressionUUID->"0ad9ba67-2b78-4c60-9acb-0c95207bb425"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testIntegrator", "[", 
    RowBox[{
    "meta_", ",", "id_", ",", "infunc_", ",", "outfunc_", ",", "gfunc_", ",", 
     "wfunc_", ",", "inopfunc_", ",", "opfunc_", ",", "name_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"outprec", " ", "=", " ", "32"}], ",", 
       RowBox[{"intN", "=", 
        RowBox[{"OptionValue", "[", "intN", "]"}]}], ",", 
       RowBox[{"tFunc", "=", 
        RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}], ",", "i", ",", 
       "nN", ",", "sRows", ",", "sCols", ",", "gridN", ",", "ls", ",", 
       "descr", ",", " ", "in", ",", "inR", ",", "inI", ",", "s", ",", "grid",
        ",", "zg", ",", "zs", ",", "wgts", ",", "ref", ",", "refR", ",", 
       "refI", ",", "msg", ",", "tempmsg", ",", "fbase", ",", "fname"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nN", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridN", " ", "=", " ", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ls", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"msg", "=", 
       RowBox[{
       "\"\<Exporting \>\"", "<>", "name", "<>", 
        "\"\< Worland operator id = \>\"", "<>", 
        RowBox[{"ToString", "[", "id", "]"}], "<>", "\"\< for N = \>\"", "<>", 
        RowBox[{"ToString", "[", "nN", "]"}], "<>", "\"\<, Ng = \>\"", " ", "<>", 
        RowBox[{"ToString", "[", "gridN", "]"}], "<>", "\"\<, l = \>\"", "<>", 
        RowBox[{"ToString", "[", "ls", "]"}], "<>", "\"\<...\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fbase", "=", 
       RowBox[{"name", "<>", "\"\<_id\>\"", "<>", 
        RowBox[{"ToString", "[", "id", "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "meta", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"fname", "=", 
       RowBox[{"fbase", "<>", "\"\<_meta.dat\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"descr", "=", 
       RowBox[{"createMetadata", "[", 
        RowBox[{"nN", ",", "gridN", ",", "ls", ",", "tFunc"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}], 
         "]"}], ",", "descr"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "input", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"generateInData", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"grid", " ", "=", " ", 
          RowBox[{"gfunc", "[", "gridN", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"sRows", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"intN", " ", "<=", " ", "0"}], ",", "nN", ",", "intN"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"sCols", " ", "=", " ", 
          RowBox[{"Length", "@", "ls"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"s", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"infunc", "[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", 
              RowBox[{"sRows", "-", "1"}], ",", 
              RowBox[{"ls", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", "tFunc"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "sRows"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "sCols"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"zg", " ", "=", 
          RowBox[{"0", " ", "grid"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"inR", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"s", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], "!=", "0"}], ",", 
                RowBox[{
                 RowBox[{"s", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], 
                 RowBox[{"inopfunc", "[", 
                  RowBox[{
                   RowBox[{"i", "-", "1"}], ",", 
                   RowBox[{"ls", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], 
                ",", "zg"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "sRows"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "sCols"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"inI", " ", "=", " ", 
          RowBox[{"-", "inR"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"in", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "inR", "]"}], ",", 
            RowBox[{"Transpose", "[", "inI", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"in", "=", 
          RowBox[{"N", "[", 
           RowBox[{"in", ",", "outprec"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_in.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "in", ",", "\"\<Table\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "reference", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"generateInData", "&&", " ", "generateRefData"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"wgts", "=", 
          RowBox[{"wfunc", "[", "gridN", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"zs", "=", "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{"refR", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"i", "-", "1"}], "<=", 
               RowBox[{"tFunc", "[", 
                RowBox[{
                 RowBox[{"sRows", "-", "1"}], ",", 
                 RowBox[{"ls", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
              RowBox[{"Dot", "[", 
               RowBox[{
                RowBox[{"wgts", " ", 
                 RowBox[{"opfunc", "[", 
                  RowBox[{
                   RowBox[{"i", "-", "1"}], ",", 
                   RowBox[{"ls", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], 
                ",", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"inR", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", ";;"}], "]"}], "]"}], "]"}]}], "]"}], 
              ",", "zs"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "sRows"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "sCols"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"refR", " ", "=", " ", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"outfunc", "[", 
              RowBox[{
               RowBox[{"refR", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "j"}], "]"}], "]"}], ",", " ", 
               RowBox[{"ls", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", "tFunc"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "sCols"}], "}"}]}], "]"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"refI", " ", "=", " ", 
          RowBox[{"-", "refR"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ref", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"refR", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "nN"}], ",", ";;"}], "]"}], "]"}], ",", 
            RowBox[{"refI", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "nN"}], ",", ";;"}], "]"}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_ref.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "ref", ",", "\"\<Table\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"msg", ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\< Done(\>\"", "<>", 
             RowBox[{"DateString", "[", "]"}], "<>", "\"\<)\>\""}], ",", 
            RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}]}], "}"}], 
        "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "testIntegrator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"intN", "->", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"truncationFunc", "->", "uniformTruncation"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testIntegratorDiff", "[", 
    RowBox[{
    "meta_", ",", "id_", ",", "infunc_", ",", "sfunc_", ",", "outfunc_", ",", 
     "gfunc_", ",", "wfunc_", ",", "inopfunc_", ",", "opfunc_", ",", "name_", 
     ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"outprec", " ", "=", " ", "32"}], ",", "i", ",", 
       RowBox[{"intN", "=", 
        RowBox[{"OptionValue", "[", "intN", "]"}]}], ",", 
       RowBox[{"tFunc", "=", 
        RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}], ",", "nN", ",",
        "sRows", ",", "sCols", ",", "gridN", ",", "ls", ",", "descr", ",", 
       "s", ",", " ", "in", ",", "inR", ",", "finR", ",", "inI", ",", "finI", 
       ",", "grid", ",", "wgts", ",", "ref", ",", "refR", ",", "refI", ",", 
       "msg", ",", "tempmsg", ",", "fbase", ",", "fname"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nN", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridN", " ", "=", " ", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ls", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"msg", "=", 
       RowBox[{
       "\"\<Exporting \>\"", "<>", "name", "<>", 
        "\"\< Worland operator id = \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "id", "]"}], "<>", "\"\< for N = \>\"", "<>", 
        RowBox[{"ToString", "[", "nN", "]"}], "<>", "\"\<, Ng = \>\"", " ", "<>", 
        RowBox[{"ToString", "[", "gridN", "]"}], "<>", "\"\<, l = \>\"", "<>", 
        RowBox[{"ToString", "[", "ls", "]"}], "<>", "\"\<...\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fbase", "=", 
       RowBox[{"name", "<>", "\"\<_id\>\"", "<>", 
        RowBox[{"ToString", "[", "id", "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "meta", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"fname", "=", 
       RowBox[{"fbase", "<>", "\"\<_meta.dat\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"descr", "=", 
       RowBox[{"createMetadata", "[", 
        RowBox[{"nN", ",", "gridN", ",", "ls", ",", "tFunc"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}], 
         "]"}], ",", "descr"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "input", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"generateInData", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"grid", " ", "=", " ", 
          RowBox[{"gfunc", "[", "gridN", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"sRows", " ", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"intN", " ", "<=", " ", "0"}], ",", "nN", ",", "intN"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"sCols", " ", "=", 
          RowBox[{"Length", "@", "ls"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"s", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"infunc", "[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", 
              RowBox[{"nN", "-", "1"}], ",", 
              RowBox[{"ls", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", "tFunc"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "sRows"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "sCols"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"inR", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"s", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], 
               RowBox[{"inopfunc", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"ls", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "sRows"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "sCols"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"inI", "=", 
          RowBox[{"-", "inR"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"in", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "inR", "]"}], ",", 
            RowBox[{"Transpose", "[", "inI", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"in", "=", 
          RowBox[{"N", "[", 
           RowBox[{"in", ",", "outprec"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_in.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "in", ",", "\"\<Table\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "reference", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"generateInData", " ", "&&", " ", "generateRefData"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"wgts", "=", 
          RowBox[{"wfunc", "[", "gridN", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{
          RowBox[{"finR", "[", "r_", "]"}], "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Simplify", "[", 
             RowBox[{"outfunc", "[", 
              RowBox[{
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"s", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], 
                  RowBox[{"inopfunc", "[", 
                   RowBox[{
                    RowBox[{"i", "-", "1"}], ",", 
                    RowBox[{"ls", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "r"}], "]"}]}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "sRows"}], "}"}]}], "]"}], ",", 
               
               RowBox[{"ls", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", "r"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "sCols"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"finI", "[", "r_", "]"}], ":=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Simplify", "[", 
             RowBox[{"outfunc", "[", 
              RowBox[{
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"s", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], 
                  RowBox[{"inopfunc", "[", 
                   RowBox[{
                    RowBox[{"i", "-", "1"}], ",", 
                    RowBox[{"ls", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "r"}], "]"}]}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "sRows"}], "}"}]}], "]"}], ",", 
               
               RowBox[{"ls", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", "r"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "sCols"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"inR", " ", "=", 
          RowBox[{"ParallelMap", "[", 
           RowBox[{"finR", ",", "grid"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"inI", " ", "=", 
            RowBox[{"Map", "[", 
             RowBox[{"finI", ",", "grid"}], "]"}]}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"inI", "=", 
          RowBox[{"-", "inR"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"refR", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{"wgts", " ", 
               RowBox[{"opfunc", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"ls", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], ",", 
              RowBox[{"inR", "[", 
               RowBox[{"[", 
                RowBox[{";;", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "sRows"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "sCols"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"refR", " ", "=", " ", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"sfunc", "[", 
              RowBox[{
               RowBox[{"refR", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "j"}], "]"}], "]"}], ",", " ", 
               RowBox[{"ls", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "sCols"}], "}"}]}], "]"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"refI", "=", 
          RowBox[{"-", "refR"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ref", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"refR", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "nN"}], ",", ";;"}], "]"}], "]"}], ",", 
            RowBox[{"refI", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "nN"}], ",", ";;"}], "]"}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_ref.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "ref", ",", "\"\<Table\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"msg", ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\< Done(\>\"", "<>", 
             RowBox[{"DateString", "[", "]"}], "<>", "\"\<)\>\""}], ",", 
            RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}]}], "}"}], 
        "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "testIntegratorDiff", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"intN", "->", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"truncationFunc", "->", "uniformTruncation"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testIntegratorNL", "[", 
    RowBox[{
    "meta_", ",", "id_", ",", "infunc_", ",", "outfunc_", ",", "gfunc_", ",", 
     "wfunc_", ",", "inopfunc_", ",", "opfunc_", ",", "name_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sRows", ",", "nlinfunc"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sRows", " ", "=", " ", 
       RowBox[{"2", 
        RowBox[{"meta", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nlinfunc", "[", 
        RowBox[{"n_", ",", "maxN_", ",", "l_", ",", 
         RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
       RowBox[{
        RowBox[{"infunc", "[", 
         RowBox[{"n", ",", "maxN", ",", "l", ",", "tFunc"}], "]"}], "/", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", "<=", " ", "maxN"}], ",", "1", ",", "10"}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"testIntegrator", "[", 
       RowBox[{
       "meta", ",", "id", ",", "nlinfunc", ",", "outfunc", ",", "gfunc", ",", 
        "wfunc", ",", "inopfunc", ",", "opfunc", ",", "name", ",", 
        RowBox[{"intN", "->", 
         RowBox[{"OptionValue", "[", "intN", "]"}]}], ",", 
        RowBox[{"truncationFunc", "->", 
         RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}]}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "testIntegratorNL", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"intN", "->", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"truncationFunc", "->", "uniformTruncation"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testIntegratorDiffNL", "[", 
    RowBox[{
    "meta_", ",", "id_", ",", "infunc_", ",", "sfunc_", ",", "outfunc_", ",", 
     "gfunc_", ",", "wfunc_", ",", "inopfunc_", ",", "opfunc_", ",", "name_", 
     ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sRows", ",", " ", "nlinfunc"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sRows", " ", "=", " ", 
       RowBox[{"2", 
        RowBox[{"meta", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nlinfunc", "[", 
        RowBox[{"n_", ",", "maxN_", ",", "l_", ",", 
         RowBox[{"tFunc_", ":", "uniformTruncation"}]}], "]"}], ":=", 
       RowBox[{
        RowBox[{"infunc", "[", 
         RowBox[{"n", ",", "maxN", ",", "l", ",", "tFunc"}], "]"}], "/", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"n", "<=", " ", "maxN"}], ",", "1", ",", "10"}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"testIntegratorDiff", "[", 
       RowBox[{
       "meta", ",", "id", ",", "nlinfunc", ",", "sfunc", ",", "outfunc", ",", 
        "gfunc", ",", "wfunc", ",", "inopfunc", ",", "opfunc", ",", "name", 
        ",", 
        RowBox[{"intN", "->", 
         RowBox[{"OptionValue", "[", "intN", "]"}]}], ",", 
        RowBox[{"truncationFunc", "->", 
         RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}]}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "testIntegratorDiffNL", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"intN", "->", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"truncationFunc", "->", "uniformTruncation"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.856598049275811*^9, 3.856598112089069*^9}, {
   3.856599259817794*^9, 3.856599292078162*^9}, {3.8565995210292177`*^9, 
   3.85659959786336*^9}, {3.856600729822057*^9, 3.8566007633690147`*^9}, {
   3.856600884195139*^9, 3.856600894909388*^9}, {3.856602299905645*^9, 
   3.856602300182333*^9}, 3.856602794450094*^9, {3.856606771664496*^9, 
   3.856606799295714*^9}, {3.8566069830595922`*^9, 3.8566070402468224`*^9}, {
   3.8566072815686817`*^9, 3.856607284580389*^9}, {3.856607365188726*^9, 
   3.8566073727882977`*^9}, {3.856607410593628*^9, 3.8566074838192472`*^9}, {
   3.856607526717285*^9, 3.856607529436624*^9}, {3.8566076215921593`*^9, 
   3.856607625609891*^9}, {3.856607795572246*^9, 3.856607818288032*^9}, {
   3.856608343892806*^9, 3.856608344195533*^9}, {3.857113182870143*^9, 
   3.857113191239558*^9}, {3.8571135523020678`*^9, 3.857113633258556*^9}, {
   3.857113669237479*^9, 3.85711367922573*^9}, {3.857113710828217*^9, 
   3.857113716359797*^9}, {3.857114204362896*^9, 3.857114275172207*^9}, {
   3.857123653185501*^9, 3.857123724835878*^9}, {3.85712421110352*^9, 
   3.857124212830347*^9}, {3.857124322538252*^9, 3.857124341137295*^9}, {
   3.8571259398034163`*^9, 3.85712594218845*^9}, {3.8571259757143393`*^9, 
   3.8571260950662813`*^9}, {3.857126250783101*^9, 3.857126251042448*^9}, {
   3.857177507925071*^9, 3.857177529245571*^9}, {3.85717756019666*^9, 
   3.857177566218479*^9}, {3.857177596308333*^9, 3.857177598836355*^9}, {
   3.857177815331406*^9, 3.8571778195061398`*^9}, {3.857179074542316*^9, 
   3.857179088953238*^9}, {3.8571791407034893`*^9, 3.857179163735475*^9}, {
   3.857179251729857*^9, 3.8571792720387297`*^9}, {3.8571793273811293`*^9, 
   3.857179338824926*^9}, {3.857179376219625*^9, 3.857179460993219*^9}, 
   3.8571795075593452`*^9, {3.8571796991320143`*^9, 3.857179699675355*^9}, {
   3.8571801425134783`*^9, 3.8571801683945427`*^9}, {3.857180246188611*^9, 
   3.857180256159535*^9}, {3.857180294297146*^9, 3.8571803671383057`*^9}, {
   3.85718043917498*^9, 3.857180440967774*^9}, {3.85718050963411*^9, 
   3.8571805270360928`*^9}, {3.8571805675915956`*^9, 3.857180609215066*^9}, {
   3.8571815842625427`*^9, 3.857181610138336*^9}, {3.857181715612623*^9, 
   3.857181740944796*^9}, {3.857182134230238*^9, 3.857182239047162*^9}, {
   3.8571822700170116`*^9, 3.857182336915299*^9}, {3.8571827474086733`*^9, 
   3.857182759497477*^9}, {3.857188956313691*^9, 3.857188972012371*^9}, {
   3.8571891016169033`*^9, 3.857189181280707*^9}, {3.857189247439665*^9, 
   3.857189322427272*^9}, {3.857189362969933*^9, 3.857189377517869*^9}, {
   3.857189422689568*^9, 3.857189448134635*^9}, {3.8571894837187347`*^9, 
   3.857189502106923*^9}, {3.8571895837178507`*^9, 3.8571895876849747`*^9}, {
   3.857189810874386*^9, 3.8571898990336227`*^9}, {3.857190112103359*^9, 
   3.857190117586091*^9}, {3.8571903825853853`*^9, 3.857190451440794*^9}, {
   3.857190482327907*^9, 3.8571906514532948`*^9}, {3.8571906894878607`*^9, 
   3.857190756162562*^9}, {3.8571909342434464`*^9, 3.85719139279351*^9}, 
   3.857191568942932*^9, {3.861334037166214*^9, 3.8613340897150927`*^9}, {
   3.861334296910906*^9, 3.861334507559226*^9}, {3.861334824499213*^9, 
   3.8613349025333138`*^9}, {3.8613354409253397`*^9, 3.861335441159502*^9}, {
   3.861336834742221*^9, 3.861336835058358*^9}, {3.8613370380592613`*^9, 
   3.8613371771576977`*^9}, {3.8614061179879103`*^9, 3.861406155250987*^9}, {
   3.861406668815996*^9, 3.861406731845849*^9}, {3.8614067749204397`*^9, 
   3.8614067890646563`*^9}, {3.8614084641791687`*^9, 3.8614085233598747`*^9}, 
   3.861408611832025*^9, {3.8614087395138893`*^9, 3.8614087553871098`*^9}, {
   3.8614087992145243`*^9, 3.861408830071341*^9}, {3.861951917948866*^9, 
   3.861951921220607*^9}, {3.8619519821075583`*^9, 3.861951982909219*^9}, {
   3.861952195415535*^9, 3.861952230329246*^9}, {3.861952449475246*^9, 
   3.861952453163054*^9}, {3.8619531798175287`*^9, 3.861953182484557*^9}, {
   3.861953362533738*^9, 3.861953383857449*^9}, {3.861953429894375*^9, 
   3.86195343729333*^9}, {3.861953607811367*^9, 3.8619536096362047`*^9}, {
   3.861960007573091*^9, 3.861960019187024*^9}, {3.86196007290152*^9, 
   3.861960078669487*^9}, {3.861960153880447*^9, 3.861960177992235*^9}, {
   3.862015787675866*^9, 3.8620157887633667`*^9}, {3.893134918894951*^9, 
   3.8931350887942467`*^9}, {3.893141111004767*^9, 3.8931411156706877`*^9}, {
   3.893141907162924*^9, 3.8931419105264683`*^9}, {3.893238478314035*^9, 
   3.893238537552677*^9}, {3.8932387700386477`*^9, 3.893238783966859*^9}, {
   3.904726174987979*^9, 3.904726218479154*^9}, {3.904726255452499*^9, 
   3.9047262739654913`*^9}, {3.904783362171719*^9, 3.904783499907055*^9}, {
   3.904783661803033*^9, 3.904783663685462*^9}, {3.904783785431089*^9, 
   3.9047838582561893`*^9}, {3.904783991092781*^9, 3.9047839931398563`*^9}, {
   3.90478431556907*^9, 3.904784321007537*^9}, {3.9047845094177437`*^9, 
   3.9047845702290497`*^9}, {3.904784893284314*^9, 3.904784953745735*^9}, {
   3.904785092257229*^9, 3.90478509563932*^9}, {3.904785236793873*^9, 
   3.90478524197163*^9}, {3.90478606072783*^9, 3.904786060875156*^9}, {
   3.9047882475284863`*^9, 3.904788272369835*^9}, {3.904788303385951*^9, 
   3.904788412543539*^9}, {3.904794074240465*^9, 3.904794083669776*^9}, {
   3.9047983177237787`*^9, 3.904798319567321*^9}, {3.9047986511988688`*^9, 
   3.9047986705760927`*^9}, 3.9047990870924892`*^9, {3.904799367545286*^9, 
   3.904799378631168*^9}, {3.904817789749886*^9, 3.904817794172184*^9}, {
   3.904884693367917*^9, 3.904884716013599*^9}, {3.9048847829292393`*^9, 
   3.904884791127728*^9}, {3.904884888667584*^9, 3.9048849348610983`*^9}, {
   3.9048850182716312`*^9, 3.904885021975114*^9}, {3.9048850630200653`*^9, 
   3.904885069289379*^9}, {3.9048851589542313`*^9, 3.90488516264995*^9}, {
   3.9048851929521646`*^9, 3.904885205759923*^9}, {3.905308115970573*^9, 
   3.905308142745058*^9}, {3.905309685561257*^9, 3.905309686484275*^9}, {
   3.905311378950953*^9, 3.90531142516039*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"18223471-ae8c-407c-9b00-661aee82d843"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateIntegrators", "[", 
    RowBox[{
    "meta_", ",", "tId_", ",", "inSpec_", ",", "gfunc_", ",", "wfunc_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"subdir", ",", "fOp", ",", "inOp", ",", "emeta", ",", 
       RowBox[{"clean", "=", 
        RowBox[{"OptionValue", "[", "clean", "]"}]}], ",", 
       RowBox[{"tFunc", "=", 
        RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"configureGenerator", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "genIn", "]"}], ",", 
        RowBox[{"OptionValue", "[", "genRef", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"subdir", "=", "\"\<Integrator/\>\""}], ";", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<---> Operator cleaning set to \>\"", "<>", 
        RowBox[{"ToString", "[", "clean", "]"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"clean", "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"testIntegrator", "[", 
          RowBox[{
          "meta", ",", "tId", ",", "inSpec", ",", "i0", ",", "gfunc", ",", 
           "wfunc", ",", "Wnl", ",", "Wnl", ",", 
           RowBox[{"subdir", "<>", "\"\<P\>\""}], ",", 
           RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
         RowBox[{"testIntegrator", "[", 
          RowBox[{
          "meta", ",", "tId", ",", "inSpec", ",", "i0zero", ",", "gfunc", ",",
            "wfunc", ",", "Wnl", ",", "Wnl", ",", 
           RowBox[{"subdir", "<>", "\"\<P_Zero\>\""}], ",", 
           RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
         RowBox[{"testIntegrator", "[", 
          RowBox[{
          "meta", ",", "tId", ",", "inSpec", ",", "i0zero", ",", "gfunc", ",",
            "wfunc", ",", "divrWnl", ",", "rWnl", ",", 
           RowBox[{"subdir", "<>", "\"\<R1_Zero\>\""}], ",", 
           RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
         RowBox[{"testIntegrator", "[", 
          RowBox[{
          "meta", ",", "tId", ",", "inSpec", ",", "i2", ",", "gfunc", ",", 
           "wfunc", ",", "Wnl", ",", "Wnl", ",", 
           RowBox[{"subdir", "<>", "\"\<I2\>\""}], ",", 
           RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
         RowBox[{"testIntegrator", "[", 
          RowBox[{
          "meta", ",", "tId", ",", "inSpec", ",", "i2zero", ",", "gfunc", ",",
            "wfunc", ",", "Wnl", ",", "Wnl", ",", 
           RowBox[{"subdir", "<>", "\"\<I2_Zero\>\""}], ",", 
           RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";"}]}], 
       "]"}], ";", 
      RowBox[{"fOp", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"clean", "<", "2"}], ",", "divr", ",", "divrClean"}], 
        "]"}]}], ";", 
      RowBox[{"inOp", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"clean", "\[Equal]", "0"}], ",", "rWnl", ",", "divrWnl"}], 
        "]"}]}], ";", 
      RowBox[{"testIntegratorDiff", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "i0zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<DivR1_Zero\>\""}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
      RowBox[{"testIntegratorDiff", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "i2zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<I2DivR1_Zero\>\""}], ",", 
        RowBox[{"intN", "->", 
         RowBox[{
          RowBox[{
          "meta", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+",
           "3"}]}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
      RowBox[{"testIntegratorDiff", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "i4zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<I4DivR1_Zero\>\""}], ",", 
        RowBox[{"intN", "->", 
         RowBox[{
          RowBox[{
          "meta", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+",
           "6"}]}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
      RowBox[{"emeta", "=", "meta"}], ";", 
      RowBox[{
       RowBox[{
       "emeta", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+=", 
       "4"}], ";", 
      RowBox[{"testIntegratorDiff", "[", 
       RowBox[{
       "emeta", ",", "tId", ",", "inSpec", ",", "i6zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<I6DivR1_Zero\>\""}], ",", 
        RowBox[{"intN", "->", 
         RowBox[{
          RowBox[{
          "meta", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+",
           "9"}]}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
      RowBox[{"fOp", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"clean", "<", "2"}], ",", "divrdr", ",", "divrdrClean"}], 
        "]"}]}], ";", 
      RowBox[{"inOp", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"clean", "\[Equal]", "0"}], ",", "rWnl", ",", "divrWnl"}], 
        "]"}]}], ";", 
      RowBox[{"testIntegratorDiff", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "i0zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<DivR1D1R1_Zero\>\""}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
      RowBox[{"testIntegratorDiff", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "i2zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<I2DivR1D1R1_Zero\>\""}], ",", 
        RowBox[{"intN", "->", 
         RowBox[{
          RowBox[{
          "meta", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+",
           "3"}]}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
      RowBox[{"testIntegratorDiff", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "i4zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<I4DivR1D1R1_Zero\>\""}], ",", 
        RowBox[{"intN", "->", 
         RowBox[{
          RowBox[{
          "meta", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+",
           "6"}]}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "generateIntegrators", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"clean", "\[Rule]", "0"}], ",", 
     RowBox[{"truncationFunc", "\[Rule]", "uniformTruncation"}], ",", 
     RowBox[{"genIn", "->", "False"}], ",", " ", 
     RowBox[{"genRef", "->", "False"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.848049229674677*^9, 3.848049251771206*^9}, {
   3.8480496521448307`*^9, 3.848049656981226*^9}, {3.848050318674141*^9, 
   3.848050319398353*^9}, {3.84805041205978*^9, 3.848050420438882*^9}, {
   3.8480504650057077`*^9, 3.848050476165163*^9}, {3.848050899686056*^9, 
   3.848050899845457*^9}, {3.848051399686063*^9, 3.848051410239089*^9}, {
   3.848051657496163*^9, 3.8480516716586857`*^9}, {3.848051721336606*^9, 
   3.848051733224271*^9}, {3.848051805607581*^9, 3.8480518116732607`*^9}, {
   3.856597756427339*^9, 3.856597775348804*^9}, {3.8565981188944607`*^9, 
   3.856598123083996*^9}, {3.856602180235999*^9, 3.8566021851368103`*^9}, {
   3.856602229105282*^9, 3.856602265436655*^9}, {3.85660280852356*^9, 
   3.8566029155775023`*^9}, {3.856603018222148*^9, 3.856603040348002*^9}, {
   3.856603508116929*^9, 3.85660351580831*^9}, {3.8566039150919523`*^9, 
   3.856603944987514*^9}, {3.856607061281365*^9, 3.856607078904152*^9}, {
   3.8566075377479277`*^9, 3.856607539701406*^9}, {3.856608358682702*^9, 
   3.856608377955057*^9}, {3.8566086107800903`*^9, 3.856608615886443*^9}, {
   3.8571238894569893`*^9, 3.8571239270655413`*^9}, {3.85712397922727*^9, 
   3.857123979601695*^9}, {3.8571776230233088`*^9, 3.857177629508893*^9}, {
   3.8571807302757607`*^9, 3.857180752801723*^9}, {3.857181974116585*^9, 
   3.8571819960093927`*^9}, {3.857185919510305*^9, 3.857185930246771*^9}, {
   3.857205257920287*^9, 3.8572052642701273`*^9}, {3.857611406032599*^9, 
   3.8576114180098*^9}, {3.85761839704287*^9, 3.857618447268395*^9}, {
   3.858305306785858*^9, 3.858305493843651*^9}, {3.858305524361765*^9, 
   3.858305571006102*^9}, {3.858311279702656*^9, 3.858311286923458*^9}, {
   3.861325806158959*^9, 3.8613258773616943`*^9}, {3.861326394573592*^9, 
   3.861326501085638*^9}, {3.861767230250499*^9, 3.861767237430264*^9}, {
   3.8619602921017637`*^9, 3.861960362542823*^9}, {3.863146893928945*^9, 
   3.863146913072721*^9}, {3.863146996576844*^9, 3.8631470387666483`*^9}, {
   3.8631472334891977`*^9, 3.8631472359886837`*^9}, {3.863148040249374*^9, 
   3.863148052912643*^9}, {3.863148152740995*^9, 3.863148176700309*^9}, {
   3.863148287346942*^9, 3.86314828914468*^9}, {3.8631485569672203`*^9, 
   3.863148557117017*^9}, {3.893238561762041*^9, 3.893238566899432*^9}, {
   3.904786512414839*^9, 3.90478657957933*^9}, {3.904788427525896*^9, 
   3.904788541348205*^9}, 3.904807050702359*^9, {3.904901509525096*^9, 
   3.904901522057521*^9}, 3.904901552951376*^9},
 CellLabel->
  "In[105]:=",ExpressionUUID->"57e55014-0d3a-4fb7-ab1e-a418cc5fe50a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateIntegratorsNL", "[", 
    RowBox[{
    "meta_", ",", "tId_", ",", "inSpec_", ",", "gfunc_", ",", "wfunc_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"subdir", ",", "fOp", ",", "inOp", ",", "emeta", ",", 
       RowBox[{"clean", "=", 
        RowBox[{"OptionValue", "[", "clean", "]"}]}], ",", 
       RowBox[{"tFunc", "=", 
        RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"configureGenerator", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "genIn", "]"}], ",", 
        RowBox[{"OptionValue", "[", "genRef", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"subdir", "=", "\"\<Integrator/\>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<---> Operator cleaning set to \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "clean", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"clean", "==", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"testIntegratorNL", "[", 
          RowBox[{
          "meta", ",", "tId", ",", "inSpec", ",", "i0", ",", "gfunc", ",", 
           "wfunc", ",", "Wnl", ",", "Wnl", ",", 
           RowBox[{"subdir", "<>", "\"\<P\>\""}], ",", 
           RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"testIntegratorNL", "[", 
          RowBox[{
          "meta", ",", "tId", ",", "inSpec", ",", "i0zero", ",", "gfunc", ",",
            "wfunc", ",", "Wnl", ",", "Wnl", ",", 
           RowBox[{"subdir", "<>", "\"\<P_Zero\>\""}], ",", 
           RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"testIntegratorNL", "[", 
          RowBox[{
          "meta", ",", "tId", ",", "inSpec", ",", "i0zero", ",", "gfunc", ",",
            "wfunc", ",", "divrWnl", ",", "rWnl", ",", 
           RowBox[{"subdir", "<>", "\"\<R1_Zero\>\""}], ",", 
           RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"testIntegratorNL", "[", 
          RowBox[{
          "meta", ",", "tId", ",", "inSpec", ",", "i2", ",", "gfunc", ",", 
           "wfunc", ",", "Wnl", ",", "Wnl", ",", 
           RowBox[{"subdir", "<>", "\"\<I2\>\""}], ",", 
           RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"testIntegratorNL", "[", 
          RowBox[{
          "meta", ",", "tId", ",", "inSpec", ",", "i2zero", ",", "gfunc", ",",
            "wfunc", ",", "Wnl", ",", "Wnl", ",", 
           RowBox[{"subdir", "<>", "\"\<I2_Zero\>\""}], ",", 
           RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"fOp", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"clean", "<", "2"}], ",", "divr", ",", "divrClean"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"inOp", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"clean", "==", "0"}], ",", "rWnl", ",", "divrWnl"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"testIntegratorDiffNL", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "i0zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<DivR1_Zero\>\""}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testIntegratorDiffNL", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "i2zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<I2DivR1_Zero\>\""}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testIntegratorDiffNL", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "i4zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<I4DivR1_Zero\>\""}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"emeta", "=", "meta"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"emeta", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+=", "4"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testIntegratorDiffNL", "[", 
       RowBox[{
       "emeta", ",", "tId", ",", "inSpec", ",", "i6zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<I6DivR1_Zero\>\""}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fOp", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"clean", "<", "2"}], ",", "divrdr", ",", "divrdrClean"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"inOp", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"clean", "==", "0"}], ",", "rWnl", ",", "divrWnl"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"testIntegratorDiffNL", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "i0zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<DivR1D1R1_Zero\>\""}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testIntegratorDiffNL", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "i2zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<I2DivR1D1R1_Zero\>\""}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testIntegratorDiffNL", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "i4zero", ",", "fOp", ",", 
        "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
        RowBox[{"subdir", "<>", "\"\<I4DivR1D1R1_Zero\>\""}], ",", 
        RowBox[{"truncationFunc", "\[Rule]", "tFunc"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "generateIntegratorsNL", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"clean", "\[Rule]", "0"}], ",", 
     RowBox[{"truncationFunc", "\[Rule]", "uniformTruncation"}], ",", 
     RowBox[{"genIn", "->", "False"}], ",", " ", 
     RowBox[{"genRef", "->", "False"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.85712398691365*^9, 3.8571240357128963`*^9}, {
   3.857126082231286*^9, 3.8571260881436577`*^9}, {3.857126179016927*^9, 
   3.857126191637504*^9}, {3.857188698359054*^9, 3.857188748228314*^9}, {
   3.857611399544325*^9, 3.857611401276347*^9}, {3.857611437219584*^9, 
   3.8576114479174633`*^9}, {3.8576184678912067`*^9, 
   3.8576185206979933`*^9}, {3.8583050713896523`*^9, 3.858305229893567*^9}, {
   3.858305587534062*^9, 3.858305617909607*^9}, {3.85831130415619*^9, 
   3.858311311320032*^9}, {3.8613258987293253`*^9, 3.86132595303794*^9}, 
   3.861325993931458*^9, {3.861326036258486*^9, 3.861326171311182*^9}, {
   3.8617672726082478`*^9, 3.861767275438216*^9}, 3.861959550975902*^9, {
   3.861960370380196*^9, 3.861960372127544*^9}, {3.8631481394770327`*^9, 
   3.863148146982562*^9}, {3.863148240342946*^9, 3.8631482568067513`*^9}, {
   3.863148567072812*^9, 3.86314858651687*^9}, {3.86314986563897*^9, 
   3.863149865738686*^9}, {3.86314995596598*^9, 3.86314995968815*^9}, 
   3.863150499684819*^9, {3.863151701114674*^9, 3.863151715360466*^9}, {
   3.8932385726211033`*^9, 3.893238578986638*^9}, {3.904788548427608*^9, 
   3.904788596445134*^9}, {3.9048178128642473`*^9, 3.9048178135007887`*^9}, {
   3.904884801642247*^9, 3.9048848110940437`*^9}, {3.904885218756447*^9, 
   3.904885218987953*^9}, {3.904901557170743*^9, 3.904901574184667*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"5d3c1ee0-73c1-482d-a4f0-88b4125dc3df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"generateIntegrators", "[", 
      RowBox[{
      "meta_", ",", "tId_", ",", "inSpec_", ",", "gfunc_", ",", "wfunc_", ",", 
       RowBox[{"clean_", ":", "0"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"subdir", ",", "fOp", ",", "inOp", ",", "emeta"}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"subdir", "=", "\"\<Integrator/\>\""}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fOp", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"clean", "<", "2"}], ",", "divr", ",", "divrClean"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"inOp", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"clean", "==", "0"}], ",", "rWnl", ",", "divrWnl"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"emeta", "=", "meta"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"emeta", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "+=", "4"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"testIntegratorDiff", "[", 
         RowBox[{
         "emeta", ",", "tId", ",", "inSpec", ",", "i6zero", ",", "fOp", ",", 
          "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
          RowBox[{"subdir", "<>", "\"\<I6DivR1_Zero\>\""}], ",", 
          RowBox[{
           RowBox[{"meta", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", "9"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"generateIntegratorsNL", "[", 
      RowBox[{
      "meta_", ",", "tId_", ",", "inSpec_", ",", "gfunc_", ",", "wfunc_", ",", 
       RowBox[{"clean_", ":", "0"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"subdir", ",", "fOp", ",", "inOp", ",", "emeta"}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"subdir", "=", "\"\<Integrator/\>\""}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fOp", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"clean", "<", "2"}], ",", "divr", ",", "divrClean"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"inOp", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"clean", "==", "0"}], ",", "rWnl", ",", "divrWnl"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"emeta", "=", "meta"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"emeta", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "+=", "4"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"testIntegratorDiffNL", "[", 
         RowBox[{
         "emeta", ",", "tId", ",", "inSpec", ",", "i6zero", ",", "fOp", ",", 
          "gfunc", ",", "wfunc", ",", "inOp", ",", "Wnl", ",", 
          RowBox[{"subdir", "<>", "\"\<I6DivR1_Zero\>\""}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.848049229674677*^9, 3.848049251771206*^9}, {
   3.8480496521448307`*^9, 3.848049656981226*^9}, {3.848050318674141*^9, 
   3.848050319398353*^9}, {3.84805041205978*^9, 3.848050420438882*^9}, {
   3.8480504650057077`*^9, 3.848050476165163*^9}, {3.848050899686056*^9, 
   3.848050899845457*^9}, {3.848051399686063*^9, 3.848051410239089*^9}, {
   3.848051657496163*^9, 3.8480516716586857`*^9}, {3.848051721336606*^9, 
   3.848051733224271*^9}, {3.848051805607581*^9, 3.8480518116732607`*^9}, {
   3.856597756427339*^9, 3.856597775348804*^9}, {3.8565981188944607`*^9, 
   3.856598123083996*^9}, {3.856602180235999*^9, 3.8566021851368103`*^9}, {
   3.856602229105282*^9, 3.856602265436655*^9}, {3.85660280852356*^9, 
   3.8566029155775023`*^9}, {3.856603018222148*^9, 3.856603040348002*^9}, {
   3.856603508116929*^9, 3.85660351580831*^9}, {3.8566039150919523`*^9, 
   3.856603944987514*^9}, {3.856607061281365*^9, 3.856607078904152*^9}, {
   3.8566075377479277`*^9, 3.856607539701406*^9}, {3.856608358682702*^9, 
   3.856608377955057*^9}, {3.8566086107800903`*^9, 3.856608615886443*^9}, {
   3.8571238894569893`*^9, 3.8571239270655413`*^9}, {3.85712397922727*^9, 
   3.857123979601695*^9}, {3.8571776230233088`*^9, 3.857177629508893*^9}, {
   3.8571807302757607`*^9, 3.857180752801723*^9}, {3.857181974116585*^9, 
   3.8571819960093927`*^9}, {3.857185919510305*^9, 3.857185930246771*^9}, {
   3.857205257920287*^9, 3.857205298594637*^9}, {3.857611324925537*^9, 
   3.857611329102394*^9}, {3.857611371885716*^9, 3.8576113884536257`*^9}, {
   3.857611457285984*^9, 3.8576115478428392`*^9}, {3.857611712497006*^9, 
   3.857611713825495*^9}, {3.857611759519278*^9, 3.857611835112314*^9}, {
   3.857612668331355*^9, 3.857612670563301*^9}, {3.857631496242497*^9, 
   3.8576315245656013`*^9}, {3.857631718365922*^9, 3.857631718524748*^9}, {
   3.8576317741752043`*^9, 3.857631775722139*^9}, {3.858302393490202*^9, 
   3.85830241938269*^9}, {3.8583027530135736`*^9, 3.858302753393118*^9}, {
   3.858303794533393*^9, 3.858303794926412*^9}, 3.8583038827953777`*^9, {
   3.858304492808866*^9, 3.858304510711568*^9}, {3.858304652012436*^9, 
   3.8583046659234324`*^9}, {3.858311327176876*^9, 3.8583113557068043`*^9}, {
   3.8613265273409967`*^9, 3.861326544931507*^9}, {3.861351175272119*^9, 
   3.861351189696987*^9}, {3.8613513748440247`*^9, 3.861351382543601*^9}, 
   3.8614090336224747`*^9, {3.8614090653140707`*^9, 3.861409070167823*^9}, {
   3.861767311460968*^9, 3.86176734017874*^9}, {3.8619514310269403`*^9, 
   3.861951463757516*^9}, {3.863146215528514*^9, 3.863146215570063*^9}, {
   3.8631504787321777`*^9, 3.8631505393322887`*^9}, 3.863151725219857*^9, {
   3.893141915403405*^9, 3.8931419272522173`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"53442a51-a69e-42c5-ae3b-9fd045d0b1e6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxL", "=", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genTags", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setups", "=", 
   RowBox[{"{", 
    RowBox[{"uniformSetup", ",", "triangularSetup"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectra", "=", 
   RowBox[{"{", 
    RowBox[{
    "minSpectrum", ",", "maxSpectrum", ",", "unitSpectrum", ",", 
     "randSpectrum"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"it", "=", "1"}], ",", 
    RowBox[{"it", "<=", " ", 
     RowBox[{"Length", "[", "spectra", "]"}]}], ",", 
    RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"StringRepeat", "[", 
       RowBox[{"\"\<%\>\"", ",", "50"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<%%% Generating data with \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"spectra", "[", 
         RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\< spectrum\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", " ", 
      RowBox[{
       RowBox[{"is", " ", "=", " ", "1"}], ",", 
       RowBox[{"is", "<=", " ", 
        RowBox[{"Length", "[", "setups", "]"}]}], ",", 
       RowBox[{"is", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", "tFunc"}], "}"}], "=", 
         RowBox[{
          RowBox[{"setups", "[", 
           RowBox[{"[", "is", "]"}], "]"}], "[", "maxL", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"meta", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "2", ",", "3", ",", "8", ",", "maxL"}], 
            "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "0"}], ",", 
          RowBox[{"k", "<", "2"}], ",", 
          RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"id", "=", 
            RowBox[{
             RowBox[{"1000", 
              RowBox[{"(", 
               RowBox[{"is", "-", "1"}], ")"}]}], "+", 
             RowBox[{"10", "k"}], "+", 
             RowBox[{"(", 
              RowBox[{"it", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<--- Generating data with \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"setups", "[", 
               RowBox[{"[", "is", "]"}], "]"}], "]"}], "<>", 
             "\"\< truncation, id = \>\"", "<>", 
             RowBox[{"ToString", "[", "id", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"generateIntegrators", "[", 
            RowBox[{"meta", ",", "id", ",", 
             RowBox[{"spectra", "[", 
              RowBox[{"[", "it", "]"}], "]"}], ",", "wgrid", ",", "wweights", 
             ",", 
             RowBox[{"clean", "->", "k"}], ",", 
             RowBox[{"truncationFunc", "->", "tFunc"}], ",", " ", 
             RowBox[{"genIn", "->", 
              RowBox[{
               RowBox[{"genTags", "[", 
                RowBox[{"[", "is", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
             RowBox[{"genRef", "->", 
              RowBox[{
               RowBox[{"genTags", "[", 
                RowBox[{"[", "is", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "setups", ",", "it", ",", "spectra", ",", "is", ",", "k", ",", "maxL", ",", 
   "nN", ",", "nR", ",", "tFunc", ",", "meta", ",", "id", ",", "genTags"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9049583752399273`*^9, 3.904958377569257*^9}, {
  3.904958462522399*^9, 3.904958584990696*^9}, {3.90495863717201*^9, 
  3.904958793717187*^9}, {3.904958829118566*^9, 3.904958929147781*^9}, {
  3.9049589757555103`*^9, 3.904959004413563*^9}, {3.904959046233138*^9, 
  3.904959063411928*^9}, {3.90495912470195*^9, 3.904959219640109*^9}, {
  3.904959283694828*^9, 3.9049593830374603`*^9}, {3.9049594394283113`*^9, 
  3.904959521153838*^9}, {3.904960309312263*^9, 3.904960389283909*^9}, {
  3.904960433247666*^9, 3.904960491310186*^9}, {3.9049865585768147`*^9, 
  3.904986581522167*^9}, {3.904986733745265*^9, 3.904986736037464*^9}, {
  3.905238542713256*^9, 3.905238566399048*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"d756008d-cbc8-43f2-ba9e-8e6cd64364e7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxL", "=", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genTags", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setups", "=", 
   RowBox[{"{", 
    RowBox[{"uniformSetup", ",", "triangularSetup"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectra", "=", 
   RowBox[{"{", "randSpectrum", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"it", "=", "1"}], ",", 
    RowBox[{"it", "<=", " ", 
     RowBox[{"Length", "[", "spectra", "]"}]}], ",", 
    RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"StringRepeat", "[", 
       RowBox[{"\"\<%\>\"", ",", "50"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<%%% Generating data with \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"spectra", "[", 
         RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\< spectrum\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", " ", 
      RowBox[{
       RowBox[{"is", " ", "=", " ", "1"}], ",", 
       RowBox[{"is", "<=", " ", 
        RowBox[{"Length", "[", "setups", "]"}]}], ",", 
       RowBox[{"is", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", "tFunc"}], "}"}], "=", 
         RowBox[{
          RowBox[{"setups", "[", 
           RowBox[{"[", "is", "]"}], "]"}], "[", "maxL", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"meta", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "2", ",", "3", ",", "8", ",", "maxL"}], 
            "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "0"}], ",", 
          RowBox[{"k", "<", "2"}], ",", 
          RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"id", "=", 
            RowBox[{
             RowBox[{"1000", 
              RowBox[{"(", 
               RowBox[{"is", "-", "1"}], ")"}]}], "+", 
             RowBox[{"10", "k"}], "+", 
             RowBox[{"(", 
              RowBox[{"it", "-", "1", "+", "4"}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<--- Generating data with \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"setups", "[", 
               RowBox[{"[", "is", "]"}], "]"}], "]"}], "<>", 
             "\"\< truncation, id = \>\"", "<>", 
             RowBox[{"ToString", "[", "id", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"generateIntegratorsNL", "[", 
            RowBox[{"meta", ",", "id", ",", 
             RowBox[{"spectra", "[", 
              RowBox[{"[", "it", "]"}], "]"}], ",", "wgrid", ",", "wweights", 
             ",", 
             RowBox[{"clean", "->", "k"}], ",", 
             RowBox[{"truncationFunc", "->", "tFunc"}], ",", " ", 
             RowBox[{"genIn", "->", 
              RowBox[{
               RowBox[{"genTags", "[", 
                RowBox[{"[", "is", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
             RowBox[{"genRef", "->", 
              RowBox[{
               RowBox[{"genTags", "[", 
                RowBox[{"[", "is", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "setups", ",", "it", ",", "spectra", ",", "is", ",", "k", ",", "maxL", ",", 
   "nN", ",", "nR", ",", "tFunc", ",", "meta", ",", "id", ",", "genTags"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9049583752399273`*^9, 3.904958377569257*^9}, {
   3.904958462522399*^9, 3.904958584990696*^9}, {3.90495863717201*^9, 
   3.904958793717187*^9}, {3.904958829118566*^9, 3.904958929147781*^9}, {
   3.9049589757555103`*^9, 3.904959004413563*^9}, {3.904959046233138*^9, 
   3.904959063411928*^9}, {3.90495912470195*^9, 3.904959219640109*^9}, {
   3.904959283694828*^9, 3.9049593830374603`*^9}, {3.9049594394283113`*^9, 
   3.904959521153838*^9}, {3.904960309312263*^9, 3.904960389283909*^9}, {
   3.904960433247666*^9, 3.904960491310186*^9}, {3.9049606275171223`*^9, 
   3.9049607013827353`*^9}, {3.904986525983523*^9, 3.9049865518037243`*^9}, 
   3.904986753951931*^9, {3.905238570913669*^9, 3.905238590175424*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"d09b2f8c-382b-4f86-a826-6e86884478ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateDbIntegrators", "[", 
    RowBox[{
    "meta_", ",", "tId_", ",", "inSpec_", ",", "gfunc_", ",", "wfunc_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"subdir", ",", "fOp", ",", "inOp", ",", 
       RowBox[{"clean", "=", 
        RowBox[{"OptionValue", "[", "clean", "]"}]}], ",", 
       RowBox[{"tFunc", "=", 
        RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"configureGenerator", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "genIn", "]"}], ",", 
        RowBox[{"OptionValue", "[", "genRef", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"subdir", "=", "\"\<Integrator/\>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"clean", "==", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"testIntegrator", "[", 
           RowBox[{
           "meta", ",", "tId", ",", "inSpec", ",", "i0", ",", "gfunc", ",", 
            "wfunc", ",", "Wnl", ",", "Wnl", ",", 
            RowBox[{"subdir", "<>", "\"\<P\>\""}], ",", 
            RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";"}], "*)"}],
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"testIntegrator", "[", 
          RowBox[{
          "meta", ",", "tId", ",", "inSpec", ",", "i2", ",", "gfunc", ",", 
           "wfunc", ",", "Wnl", ",", "Wnl", ",", 
           RowBox[{"subdir", "<>", "\"\<I2\>\""}], ",", 
           RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "generateDbIntegrators", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"clean", "->", "0"}], ",", 
     RowBox[{"truncationFunc", "->", "uniformTruncation"}], ",", 
     RowBox[{"genIn", "->", "False"}], ",", 
     RowBox[{"genRef", "->", "False"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.861325792340248*^9, 3.861325792602592*^9}, {
   3.861325883400436*^9, 3.861325913643588*^9}, {3.8613267428775454`*^9, 
   3.861326772994858*^9}, {3.861326807638216*^9, 3.8613268086463823`*^9}, {
   3.861326876627061*^9, 3.8613268814749603`*^9}, {3.8613269252253838`*^9, 
   3.861326925651187*^9}, {3.8613269565654*^9, 3.8613270550035963`*^9}, {
   3.8613272074001713`*^9, 3.861327223717297*^9}, {3.861328469598057*^9, 
   3.861328484540979*^9}, {3.8613341095786753`*^9, 3.861334111461735*^9}, {
   3.861335080188281*^9, 3.861335082234659*^9}, {3.861337194925169*^9, 
   3.861337196777437*^9}, {3.86133729722573*^9, 3.8613373003035793`*^9}, {
   3.86140691381149*^9, 3.861406974053049*^9}, {3.861408347352372*^9, 
   3.861408356137961*^9}, {3.862015487866592*^9, 3.862015488008771*^9}, {
   3.862015804724965*^9, 3.862015811960568*^9}, {3.8931409520111513`*^9, 
   3.893140953371818*^9}, {3.8932386248515587`*^9, 3.8932386259557734`*^9}, 
   3.904716097922942*^9, 3.904716187152399*^9, {3.904716556881542*^9, 
   3.9047165644154577`*^9}, {3.904716747177738*^9, 3.904716761914246*^9}, {
   3.904716860818776*^9, 3.904716862094246*^9}, {3.904717032329433*^9, 
   3.904717033920884*^9}, {3.9047174371226683`*^9, 3.904717438189028*^9}, 
   3.9047175783836527`*^9, 3.9047176186770477`*^9, 3.90471765938113*^9, {
   3.904717926182432*^9, 3.904717934419712*^9}, 3.904717965483341*^9, {
   3.904718031135003*^9, 3.9047180387027893`*^9}, 3.904725759550129*^9, {
   3.9047262312149277`*^9, 3.904726231452443*^9}, {3.90472656916988*^9, 
   3.9047265693490257`*^9}, {3.904728043343046*^9, 3.904728043503662*^9}, {
   3.904783936238371*^9, 3.9047839475149527`*^9}, {3.90478401472266*^9, 
   3.904784141693788*^9}, {3.904784252736637*^9, 3.904784286776992*^9}, {
   3.904791527932685*^9, 3.904791533575471*^9}, {3.904791641523179*^9, 
   3.904791656786924*^9}, 3.904795283340735*^9, 3.904795770570725*^9, 
   3.904799667563451*^9, {3.904817835663434*^9, 3.9048178416455593`*^9}, {
   3.904885269287066*^9, 3.904885270296692*^9}, {3.904886053749445*^9, 
   3.904886056654615*^9}, {3.9049049490514097`*^9, 3.904905008464172*^9}, {
   3.904905146841814*^9, 3.9049051611445293`*^9}, 3.9049607443644047`*^9, 
   3.905314882617819*^9},
 CellLabel->
  "In[107]:=",ExpressionUUID->"ea17da8f-b901-4518-8f09-0fcb767961f5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genTags", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setups", "=", 
   RowBox[{"{", 
    RowBox[{"uniformSetup", ",", "triangularSetup"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectra", "=", 
   RowBox[{"{", "randSpectrum", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"it", "=", "1"}], ",", 
    RowBox[{"it", "<=", " ", 
     RowBox[{"Length", "[", "spectra", "]"}]}], ",", 
    RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"StringRepeat", "[", 
       RowBox[{"\"\<%\>\"", ",", "50"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<%%% Generating data with \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"spectra", "[", 
         RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\< spectrum\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", " ", 
      RowBox[{
       RowBox[{"is", " ", "=", " ", "1"}], ",", 
       RowBox[{"is", "<=", " ", 
        RowBox[{"Length", "[", "setups", "]"}]}], ",", 
       RowBox[{"is", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", " ", 
         RowBox[{
          RowBox[{"p", " ", "=", " ", "7"}], ",", 
          RowBox[{"p", "<", "9"}], ",", 
          RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"id", "=", 
            RowBox[{
             RowBox[{"1000", 
              RowBox[{"(", 
               RowBox[{"is", "-", "1"}], ")"}]}], "+", 
             RowBox[{"100", "it"}], "+", "p"}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"Print", "[", 
            RowBox[{"\"\<--- Generating data with \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"setups", "[", 
               RowBox[{"[", "is", "]"}], "]"}], "]"}], "<>", 
             "\"\< truncation, id = \>\"", "<>", 
             RowBox[{"ToString", "[", "id", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"maxL", "=", 
            RowBox[{
             SuperscriptBox["2", "p"], "-", "1"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"nN", ",", "nR", ",", "tFunc"}], "}"}], "=", 
            RowBox[{
             RowBox[{"setups", "[", 
              RowBox[{"[", "is", "]"}], "]"}], "[", "maxL", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"meta", "=", 
            RowBox[{"{", 
             RowBox[{"nN", ",", "nR", ",", 
              RowBox[{"Table", "[", 
               RowBox[{"l", ",", 
                RowBox[{"{", 
                 RowBox[{"l", ",", "0", ",", "maxL"}], "}"}]}], "]"}]}], 
             "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"generateDbIntegrators", "[", 
            RowBox[{"meta", ",", "id", ",", 
             RowBox[{"spectra", "[", 
              RowBox[{"[", "it", "]"}], "]"}], ",", "wgrid", ",", "wweights", 
             ",", 
             RowBox[{"truncationFunc", "->", "tFunc"}], ",", 
             RowBox[{"genIn", "->", 
              RowBox[{
               RowBox[{"genTags", "[", 
                RowBox[{"[", "is", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"genRef", "->", 
              RowBox[{
               RowBox[{"genTags", "[", 
                RowBox[{"[", "is", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Clear", "[", 
            RowBox[{"nL", ",", "nN", ",", "nR", ",", "tFunc", ",", "meta"}], 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "setups", ",", "it", ",", "spectra", ",", "is", ",", "maxL", ",", "nN", ",",
    "nR", ",", "tFunc", ",", "meta", ",", "id", ",", "genTags"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8620160534036303`*^9, 3.862016159656583*^9}, 
   3.862016438759507*^9, {3.893219506830196*^9, 3.893219509989716*^9}, {
   3.893221059332869*^9, 3.8932210595910788`*^9}, {3.8932256084366903`*^9, 
   3.8932256333366737`*^9}, {3.8932258123580112`*^9, 3.893225865015296*^9}, {
   3.893226086162138*^9, 3.893226086324325*^9}, {3.893226247954844*^9, 
   3.893226248090509*^9}, {3.893226501395748*^9, 3.893226501691586*^9}, {
   3.893227159344455*^9, 3.893227170776334*^9}, {3.893227336951681*^9, 
   3.893227409428813*^9}, {3.893227495505295*^9, 3.8932274984474916`*^9}, {
   3.893238441506835*^9, 3.893238452786875*^9}, {3.904785360301064*^9, 
   3.9047854612418633`*^9}, {3.904785499949646*^9, 3.904785501188499*^9}, {
   3.904785689152267*^9, 3.904785689344431*^9}, 3.9048162611394167`*^9, 
   3.904817759488121*^9, {3.904886023471702*^9, 3.9048860399526567`*^9}, {
   3.904904819784761*^9, 3.904904824074379*^9}, {3.9049048640721397`*^9, 
   3.9049049166992292`*^9}, {3.9049050395653143`*^9, 3.904905051358252*^9}, {
   3.90490509088834*^9, 3.9049050917751083`*^9}, {3.90495959088622*^9, 
   3.904959652856584*^9}, {3.90495968888876*^9, 3.904959889548525*^9}, {
   3.9049599212939997`*^9, 3.9049600278809443`*^9}, {3.904960124108971*^9, 
   3.904960126609001*^9}, {3.9049602008607616`*^9, 3.9049602199742527`*^9}, {
   3.904960505500359*^9, 3.904960506061445*^9}, {3.904960809179644*^9, 
   3.904960838897586*^9}, {3.904986498207387*^9, 3.904986521467927*^9}, {
   3.905246485702498*^9, 3.905246512615583*^9}, 3.9052477239081297`*^9, {
   3.90531273114398*^9, 3.905312731345685*^9}, {3.905314858885068*^9, 
   3.905314861162578*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"ac263cce-a9bc-42bd-8718-483836187663"],

Cell[TextData[StyleBox["Backward-Forward loop tests", "Section"]], "Text",
 CellChangeTimes->{{3.9049616223763943`*^9, 3.904961623165934*^9}, {
  3.904961717920315*^9, 3.904961726084875*^9}, {3.904961760820051*^9, 
  3.904961780323742*^9}},
 CellTags->
  "bfloopTests",ExpressionUUID->"2ccd7220-8c57-41e9-9913-b69599fe9d4d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testBFLoop", "[", 
    RowBox[{
    "meta_", ",", "id_", ",", "infunc_", ",", "gfunc_", ",", "wfunc_", ",", 
     "bopfunc_", ",", "fopfunc_", ",", "name_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"outprec", " ", "=", " ", "32"}], ",", "i", ",", "nN", ",", 
       "gridN", ",", "ls", ",", "descr", ",", " ", "in", ",", "inR", ",", 
       "inI", ",", "grid", ",", "wgts", ",", "tmpR", ",", "tmpI", ",", "ref", 
       ",", "refR", ",", "refI", ",", "msg", ",", "tempmsg", ",", "fbase", 
       ",", "fname", ",", 
       RowBox[{"tFunc", "=", 
        RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nN", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridN", " ", "=", " ", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ls", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fbase", "=", 
       RowBox[{"name", "<>", "\"\<_id\>\"", "<>", 
        RowBox[{"ToString", "[", "id", "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"msg", "=", 
       RowBox[{
       "\"\<Exporting \>\"", "<>", "name", "<>", 
        "\"\< Worland operator for N = \>\"", "<>", 
        RowBox[{"ToString", "[", "nN", "]"}], "<>", "\"\<, Ng = \>\"", " ", "<>", 
        RowBox[{"ToString", "[", "gridN", "]"}], "<>", "\"\<, l = \>\"", "<>", 
        RowBox[{"ToString", "[", "ls", "]"}], "<>", "\"\<...\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "meta", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"fname", "=", 
       RowBox[{"fbase", "<>", "\"\<_meta.dat\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"descr", "=", 
       RowBox[{"createMetadata", "[", 
        RowBox[{"nN", ",", "gridN", ",", "ls", ",", "tFunc"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}], 
         "]"}], ",", "descr"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "input", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"generateInData", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"inR", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"infunc", "[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", 
              RowBox[{"nN", "-", "1"}], ",", 
              RowBox[{"ls", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", "tFunc"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"inI", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"infunc", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", 
               RowBox[{"nN", "-", "1"}], ",", 
               RowBox[{"ls", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", "tFunc"}], "]"}]}], ",", 
            
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"in", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"inR", ",", "inI"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_in.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "in", ",", "\"\<Table\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "reference", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"generateInData", "&&", "generateRefData"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"grid", " ", "=", " ", 
          RowBox[{"gfunc", "[", "gridN", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"tmpR", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"inR", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], 
               RowBox[{"bopfunc", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"ls", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"tmpI", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"inI", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], 
               RowBox[{"bopfunc", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"ls", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"grid", " ", "=", " ", 
          RowBox[{"gfunc", "[", "gridN", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"wgts", "=", 
          RowBox[{"wfunc", "[", "gridN", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"refR", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{"wgts", " ", 
               RowBox[{"fopfunc", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"ls", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"tmpR", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", ";;"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"refI", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{"wgts", " ", 
               RowBox[{"fopfunc", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"ls", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"tmpI", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", ";;"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ref", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"refR", ",", "refI"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ref", " ", "=", " ", 
          RowBox[{"Chop", "[", 
           RowBox[{"ref", ",", 
            SuperscriptBox["10", 
             RowBox[{
              RowBox[{"-", "mpprec"}], "+", "5"}]]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_ref.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "ref", ",", "\"\<Table\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"msg", ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\< Done(\>\"", "<>", 
             RowBox[{"DateString", "[", "]"}], "<>", "\"\<)\>\""}], ",", 
            RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}]}], "}"}], 
        "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "testBFLoop", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"truncationFunc", "->", "uniformTruncation"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.848390190223886*^9, 3.848390191189435*^9}, {
   3.848390234315168*^9, 3.848390234576686*^9}, {3.848390265864709*^9, 
   3.8483903406134243`*^9}, {3.848390376807743*^9, 3.848390393546462*^9}, {
   3.848390527605175*^9, 3.848390547564303*^9}, {3.848390806975053*^9, 
   3.848390848128174*^9}, {3.8509927458130703`*^9, 3.850992772474999*^9}, 
   3.858936308395586*^9, {3.893141012937869*^9, 3.893141073138723*^9}, {
   3.893228626749002*^9, 3.8932287132081823`*^9}, {3.893238669685848*^9, 
   3.89323870020478*^9}, {3.904788683296507*^9, 3.904788744064856*^9}, {
   3.904790925977551*^9, 3.904790927358983*^9}, {3.904885394415719*^9, 
   3.904885400059841*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"dc793c0f-ebc4-411f-95d0-1b0c25ce64a6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateBFLoops", "[", 
    RowBox[{
    "meta_", ",", "tId_", ",", "inSpec_", ",", "gfunc_", ",", "wfunc_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tFunc", "=", 
       RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"configureGenerator", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "genIn", "]"}], ",", 
        RowBox[{"OptionValue", "[", "genRef", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"testBFLoop", "[", 
        RowBox[{
        "meta", ",", "tId", ",", "inSpec", ",", "gfunc", ",", "wfunc", ",", 
         "Wnl", ",", "Wnl", ",", "\"\<BFLoop/P\>\"", ",", 
         RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";;"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "generateBFLoops", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"truncationFunc", "->", "uniformTruncation"}], ",", 
     RowBox[{"genIn", "->", "False"}], ",", 
     RowBox[{"genRef", "->", "False"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.848390411366982*^9, 3.848390438599845*^9}, 
   3.848390470146268*^9, {3.8932387127687273`*^9, 3.893238713811247*^9}, {
   3.9047887541902018`*^9, 3.904788786428689*^9}, {3.904905598865467*^9, 
   3.904905618446393*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"10124907-8060-4913-85ad-c0eb774cc608"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxL", "=", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genTags", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setups", "=", 
   RowBox[{"{", 
    RowBox[{"uniformSetup", ",", "triangularSetup"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectra", "=", 
   RowBox[{"{", 
    RowBox[{
    "minSpectrum", ",", "maxSpectrum", ",", "unitSpectrum", ",", 
     "randSpectrum"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"it", "=", "1"}], ",", 
    RowBox[{"it", "<=", " ", 
     RowBox[{"Length", "[", "spectra", "]"}]}], ",", 
    RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"StringRepeat", "[", 
       RowBox[{"\"\<%\>\"", ",", "50"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<%%% Generating data with \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"spectra", "[", 
         RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\< spectrum\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", " ", 
      RowBox[{
       RowBox[{"is", " ", "=", " ", "1"}], ",", 
       RowBox[{"is", "<=", " ", 
        RowBox[{"Length", "[", "setups", "]"}]}], ",", 
       RowBox[{"is", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", "tFunc"}], "}"}], "=", 
         RowBox[{
          RowBox[{"setups", "[", 
           RowBox[{"[", "is", "]"}], "]"}], "[", "maxL", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"meta", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"id", "=", 
         RowBox[{
          RowBox[{"1000", 
           RowBox[{"(", 
            RowBox[{"is", "-", "1"}], ")"}]}], "+", 
          RowBox[{"(", 
           RowBox[{"it", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<--- Generating data with \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"setups", "[", 
            RowBox[{"[", "is", "]"}], "]"}], "]"}], "<>", 
          "\"\< truncation, id = \>\"", "<>", 
          RowBox[{"ToString", "[", "id", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"generateBFLoops", "[", 
         RowBox[{"meta", ",", "id", ",", 
          RowBox[{"spectra", "[", 
           RowBox[{"[", "it", "]"}], "]"}], ",", "wgrid", ",", "wweights", 
          ",", 
          RowBox[{"truncationFunc", "->", "tFunc"}], ",", " ", 
          RowBox[{"genIn", "->", 
           RowBox[{
            RowBox[{"genTags", "[", 
             RowBox[{"[", "is", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
          RowBox[{"genRef", "->", 
           RowBox[{
            RowBox[{"genTags", "[", 
             RowBox[{"[", "is", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "setups", ",", "it", ",", "spectra", ",", "is", ",", "k", ",", "maxL", ",", 
   "nN", ",", "nR", ",", "tFunc", ",", "meta", ",", "id", ",", "genTags"}], 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQXbP2+RdZibeOUeZGX0F03fYL/0H0ic3y/HJAWrpx
qSiINvpspgmivU8v1gXR83epWIFoFd0f9iD6hXWvM4i+V3rcA0S36L31AtEJ
ZdOCQPSx6pI4EM1hU5YGoh8YPSwC0bu2vK0E0XZvVFpANP+/lc9A9AnRlR9A
9MM36t9ANPfbzL8g2qWngE8eSMfZrxEH0SvLnuuDaD6rVxYg2mwdVyCIjggV
ANOJW36mgOiYW+ypIDqN8biREpBuyxc1B9FetQ1OINohoQdMPxAtuKwN0j/R
4jqIrjt2xmQ5kGbaJWABogFowH+U
  "],
 CellLabel->
  "In[145]:=",ExpressionUUID->"b6755347-60e0-4932-9643-4b720f15e767"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genTags", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectra", "=", 
   RowBox[{"{", "randSpectrum", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"it", "=", "1"}], ",", 
    RowBox[{"it", "<=", " ", 
     RowBox[{"Length", "[", "spectra", "]"}]}], ",", 
    RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"StringRepeat", "[", 
       RowBox[{"\"\<%\>\"", ",", "50"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<%%% Generating data with \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"spectra", "[", 
         RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\< spectrum\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", " ", 
      RowBox[{
       RowBox[{"is", " ", "=", " ", "1"}], ",", 
       RowBox[{"is", "<=", " ", 
        RowBox[{"Length", "[", "setups", "]"}]}], ",", 
       RowBox[{"is", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", " ", 
         RowBox[{
          RowBox[{"p", " ", "=", " ", "4"}], ",", 
          RowBox[{"p", "<", "12"}], ",", 
          RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"maxL", "=", 
            RowBox[{
             SuperscriptBox["2", "p"], "-", "1"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"nN", ",", "nR", ",", "tFunc"}], "}"}], "=", 
            RowBox[{
             RowBox[{"setups", "[", 
              RowBox[{"[", "is", "]"}], "]"}], "[", "maxL", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"meta", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{"nN", ",", "nR", ",", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"id", "=", 
            RowBox[{
             RowBox[{"1000", 
              RowBox[{"(", 
               RowBox[{"is", "-", "1"}], ")"}]}], "+", 
             RowBox[{"100", "it"}], "+", "p"}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"Print", "[", 
            RowBox[{"\"\<--- Generating data with \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"setups", "[", 
               RowBox[{"[", "is", "]"}], "]"}], "]"}], "<>", 
             "\"\< truncation, id = \>\"", "<>", 
             RowBox[{"ToString", "[", "id", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"generateBFLoops", "[", 
            RowBox[{"meta", ",", "id", ",", 
             RowBox[{"spectra", "[", 
              RowBox[{"[", "it", "]"}], "]"}], ",", "wgrid", ",", "wweights", 
             ",", 
             RowBox[{"truncationFunc", "->", "tFunc"}], ",", " ", 
             RowBox[{"genIn", "->", 
              RowBox[{
               RowBox[{"genTags", "[", 
                RowBox[{"[", "is", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
             RowBox[{"genRef", "->", 
              RowBox[{
               RowBox[{"genTags", "[", 
                RowBox[{"[", "is", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "setups", ",", "it", ",", "spectra", ",", "is", ",", "k", ",", "maxL", ",", 
   "p", ",", "nN", ",", "nR", ",", "tFunc", ",", "meta", ",", "id", ",", 
   "genTags"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9049583752399273`*^9, 3.904958377569257*^9}, {
   3.904958462522399*^9, 3.904958584990696*^9}, {3.90495863717201*^9, 
   3.904958793717187*^9}, {3.904958829118566*^9, 3.904958929147781*^9}, {
   3.9049589757555103`*^9, 3.904959004413563*^9}, {3.904959046233138*^9, 
   3.904959063411928*^9}, {3.90495912470195*^9, 3.904959219640109*^9}, {
   3.904959283694828*^9, 3.9049593830374603`*^9}, {3.9049594394283113`*^9, 
   3.904959521153838*^9}, {3.904960309312263*^9, 3.904960389283909*^9}, {
   3.904960433247666*^9, 3.904960491310186*^9}, {3.9049606275171223`*^9, 
   3.9049607013827353`*^9}, {3.904960895233235*^9, 3.9049609673195868`*^9}, {
   3.904961160333766*^9, 3.9049612810996723`*^9}, {3.9049613243067007`*^9, 
   3.904961324687752*^9}, {3.904967200469191*^9, 3.9049672007174*^9}, {
   3.904967934299411*^9, 3.9049679343990602`*^9}, {3.904986436317154*^9, 
   3.904986461590912*^9}, {3.905239472907372*^9, 3.905239517443553*^9}, 
   3.905239605851489*^9},ExpressionUUID->"9a724d42-9548-44c4-92ac-\
235aa5adb495"],

Cell[TextData[StyleBox["Power tests", "Section"]], "Text",
 CellChangeTimes->{{3.9049616223763943`*^9, 3.904961623165934*^9}, {
   3.904961717920315*^9, 3.904961726084875*^9}, 3.904961760820051*^9},
 CellTags->
  "powerTests",ExpressionUUID->"3f5b5c48-cddd-4117-833b-3a2a2ae518af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testPower", "[", 
    RowBox[{
    "meta_", ",", "id_", ",", "infunc_", ",", "gfunc_", ",", "wfunc_", ",", 
     "bopfunc_", ",", "fopfunc_", ",", "name_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"outprec", " ", "=", " ", "32"}], ",", "i", ",", "nN", ",", 
       "gridN", ",", "ls", ",", "descr", ",", " ", "in", ",", "inR", ",", 
       "inI", ",", "grid", ",", "wgts", ",", "tmpR", ",", "tmpI", ",", "ref", 
       ",", "refR", ",", "refI", ",", "msg", ",", "tempmsg", ",", "fbase", 
       ",", "fname", ",", 
       RowBox[{"lShift", "=", 
        RowBox[{"OptionValue", "[", "lShift", "]"}]}], ",", 
       RowBox[{"tFunc", "=", 
        RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nN", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridN", " ", "=", " ", 
       RowBox[{
        RowBox[{"meta", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "+", "4"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ls", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fbase", "=", 
       RowBox[{"name", "<>", "\"\<_id\>\"", "<>", 
        RowBox[{"ToString", "[", "id", "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"msg", "=", 
       RowBox[{
       "\"\<Exporting \>\"", "<>", "name", "<>", 
        "\"\< Worland operator for N = \>\"", "<>", 
        RowBox[{"ToString", "[", "nN", "]"}], "<>", "\"\<, Ng = \>\"", " ", "<>", 
        RowBox[{"ToString", "[", "gridN", "]"}], "<>", "\"\<, l = \>\"", "<>", 
        RowBox[{"ToString", "[", "ls", "]"}], "<>", "\"\<...\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "mata", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"fname", "=", 
       RowBox[{"fbase", "<>", "\"\<_meta.dat\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"descr", "=", 
       RowBox[{"createMetadata", "[", 
        RowBox[{"nN", ",", "gridN", ",", "ls", ",", "tFunc"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}], 
         "]"}], ",", "descr"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "input", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"generateInData", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"inR", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"infunc", "[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", 
              RowBox[{"nN", "-", "1"}], ",", 
              RowBox[{"ls", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", "tFunc"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"inI", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"infunc", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", 
               RowBox[{"nN", "-", "1"}], ",", 
               RowBox[{"ls", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", "tFunc"}], "]"}]}], ",", 
            
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"in", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"inR", ",", "inI"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_in.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "in", ",", "\"\<Table\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "reference", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"generateInData", "&&", "generateRefData"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"grid", " ", "=", " ", 
          RowBox[{"gfunc", "[", "gridN", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"tmpR", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"inR", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], 
               RowBox[{"bopfunc", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"ls", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"tmpI", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"inI", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], 
               RowBox[{"bopfunc", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"ls", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"grid", " ", "=", " ", 
          RowBox[{"gfunc", "[", "gridN", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"wgts", "=", 
          RowBox[{
           RowBox[{"wfunc", "[", "gridN", "]"}], " ", 
           SuperscriptBox["grid", "2"]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"refR", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{"wgts", " ", 
               RowBox[{"fopfunc", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{
                  RowBox[{"ls", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "+", "lShift"}], ",", 
                 "grid"}], "]"}]}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"tmpR", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", ";;"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"refI", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{"wgts", " ", 
               RowBox[{"fopfunc", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{
                  RowBox[{"ls", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "+", "lShift"}], ",", 
                 "grid"}], "]"}]}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"tmpI", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", ";;"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ref", " ", "=", " ", 
          RowBox[{"Chop", "[", 
           RowBox[{
            RowBox[{
             SuperscriptBox["refR", "2"], " ", "+", " ", 
             SuperscriptBox["refI", "2"]}], ",", 
            SuperscriptBox["10", 
             RowBox[{
              RowBox[{"-", "mpprec"}], "+", "5"}]]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_ref.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "ref", ",", "\"\<Table\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"msg", ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\< Done(\>\"", "<>", 
             RowBox[{"DateString", "[", "]"}], "<>", "\"\<)\>\""}], ",", 
            RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}]}], "}"}], 
        "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "testPower", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"lShift", "->", "0"}], ",", 
     RowBox[{"truncationFunc", "->", "uniformTruncation"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8589180377547398`*^9, 3.8589180382489843`*^9}, {
   3.858918081719805*^9, 3.858918147591954*^9}, {3.858918182288816*^9, 
   3.858918202955394*^9}, {3.8589190567478867`*^9, 3.858919093771103*^9}, {
   3.858919290035152*^9, 3.858919292504898*^9}, {3.858919503298091*^9, 
   3.858919559836658*^9}, {3.858920074955883*^9, 3.858920120994944*^9}, {
   3.858920174082961*^9, 3.858920190079564*^9}, {3.8589343284987087`*^9, 
   3.858934355930084*^9}, 3.858934402145773*^9, {3.893126590906912*^9, 
   3.893126715128253*^9}, {3.893228568367961*^9, 3.893228609371077*^9}, {
   3.893228698440547*^9, 3.893228702288397*^9}, {3.893238718176772*^9, 
   3.893238733407263*^9}, {3.9047887966787577`*^9, 3.9047888678386497`*^9}, {
   3.9048854061821957`*^9, 3.904885409465641*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"490e411d-b2ea-4a70-b8b5-c5abe2c1d9d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generatePowers", "[", 
    RowBox[{
    "meta_", ",", "tId_", ",", "inSpec_", ",", "gfunc_", ",", "wfunc_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tFunc", "=", 
       RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"configureGenerator", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "genIn", "]"}], ",", 
        RowBox[{"OptionValue", "[", "genRef", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testPower", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "gfunc", ",", "wfunc", ",", 
        "Wnl", ",", "WnlEnergy", ",", "\"\<Reductor/PowerR2\>\"", ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testPower", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "gfunc", ",", "wfunc", ",", 
        "slaplWnl", ",", "WnlEnergy", ",", "\"\<Reductor/PowerSLaplR2\>\"", 
        ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testPower", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "gfunc", ",", "wfunc", ",", 
        "divrWnl", ",", "WnlEnergy", ",", "\"\<Reductor/Power\>\"", ",", 
        RowBox[{"lShift", "->", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testPower", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "gfunc", ",", "wfunc", ",", 
        "divrdrWnl", ",", "WnlEnergy", ",", "\"\<Reductor/PowerD1R1\>\"", ",", 
        RowBox[{"lShift", "->", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "generatePowers", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"truncationFunc", "->", "uniformTruncation"}], ",", 
     RowBox[{"genIn", "->", "False"}], ",", 
     RowBox[{"genRef", "->", "False"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.858918214918326*^9, 3.858918219043927*^9}, {
  3.858918388292439*^9, 3.8589183918682137`*^9}, {3.858918517968472*^9, 
  3.8589186169603777`*^9}, {3.858933858454485*^9, 3.8589338739991302`*^9}, {
  3.858933911993498*^9, 3.8589339213830853`*^9}, {3.8589343623260727`*^9, 
  3.858934375821412*^9}, {3.876364814173636*^9, 3.876364815079277*^9}, {
  3.893238739341914*^9, 3.8932387483673773`*^9}, {3.904788877032946*^9, 
  3.9047889402531443`*^9}, {3.904906429084113*^9, 3.904906448850686*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"0d7c3a51-26ab-4c3c-956c-8c7519dae069"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxL", "=", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genTags", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setups", "=", 
   RowBox[{"{", 
    RowBox[{"uniformSetup", ",", "triangularSetup"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectra", "=", 
   RowBox[{"{", 
    RowBox[{
    "minSpectrum", ",", "maxSpectrum", ",", "unitSpectrum", ",", 
     "randSpectrum"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"it", "=", "1"}], ",", 
    RowBox[{"it", "<=", " ", 
     RowBox[{"Length", "[", "spectra", "]"}]}], ",", 
    RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"StringRepeat", "[", 
       RowBox[{"\"\<%\>\"", ",", "50"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<%%% Generating data with \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"spectra", "[", 
         RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\< spectrum\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", " ", 
      RowBox[{
       RowBox[{"is", " ", "=", " ", "1"}], ",", 
       RowBox[{"is", "<=", " ", 
        RowBox[{"Length", "[", "setups", "]"}]}], ",", 
       RowBox[{"is", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", "tFunc"}], "}"}], "=", 
         RowBox[{
          RowBox[{"setups", "[", 
           RowBox[{"[", "is", "]"}], "]"}], "[", "maxL", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"meta", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3", ",", "8", ",", "maxL"}], "}"}]}],
           "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"id", "=", 
         RowBox[{
          RowBox[{"1000", 
           RowBox[{"(", 
            RowBox[{"is", "-", "1"}], ")"}]}], "+", 
          RowBox[{"(", 
           RowBox[{"it", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<--- Generating data with \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"setups", "[", 
            RowBox[{"[", "is", "]"}], "]"}], "]"}], "<>", 
          "\"\< truncation, id = \>\"", "<>", 
          RowBox[{"ToString", "[", "id", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"generatePowers", "[", 
         RowBox[{"meta", ",", "id", ",", 
          RowBox[{"spectra", "[", 
           RowBox[{"[", "it", "]"}], "]"}], ",", "wpowergrid", ",", 
          "wpowerweights", ",", 
          RowBox[{"truncationFunc", "->", "tFunc"}], ",", " ", 
          RowBox[{"genIn", "->", 
           RowBox[{
            RowBox[{"genTags", "[", 
             RowBox[{"[", "is", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
          RowBox[{"genRef", "->", 
           RowBox[{
            RowBox[{"genTags", "[", 
             RowBox[{"[", "is", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "setups", ",", "it", ",", "spectra", ",", "is", ",", "k", ",", "maxL", ",", 
   "nN", ",", "nR", ",", "tFunc", ",", "meta", ",", "id", ",", " ", 
   "genTags"}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQXbP2+RdZibeOUeZGX0F03fYL/0H0ic3y/HJAWrpx
qSiINvpspgmivU8v1gXR83epWIFoFd0f9iD6hXWvM4i+V3rcA0S36L31AtEJ
ZdOCQPSx6pI4EM1hU5YGoh8YPSwC0bu2vK0E0XZvVFpANP+/lc9A9AnRlR9A
9MM36t9ANPfbzL8g2qWngE8eSMfZrxEH0SvLnuuDaD6rVxYg2mwdVyCIjggV
ANOJW36mgOiYW+ypIPqYqHgRmN6SXQ6iawQnPFEE0rPaj4PpB8c/TNEC0hp5
+rNB9M9T7ItA9PbfZWC6aNH2vSDaq+09mOb4n7VEG0iXHL0PprW0HtkuB9Ln
quc4gmgA+y+a2w==
  "],ExpressionUUID->"3a78ef28-4cf4-4cca-8d4c-d9d6275ed110"],

Cell[TextData[StyleBox["RadialPower tests", "Section"]], "Text",
 CellChangeTimes->{{3.9049616223763943`*^9, 3.904961623165934*^9}, {
  3.904961717920315*^9, 3.904961726084875*^9}},
 CellTags->
  "radialPowerTests",ExpressionUUID->"08d9c4eb-4bd2-4196-933d-b62dddc870c8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testRadialPower", "[", 
    RowBox[{
    "meta_", ",", "id_", ",", "infunc_", ",", "gfunc_", ",", "bopfunc_", ",", 
     "name_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"outprec", " ", "=", " ", "32"}], ",", "i", ",", "nN", ",", 
       "gridN", ",", "ls", ",", "descr", ",", " ", "in", ",", "inR", ",", 
       "inI", ",", "grid", ",", "wgts", ",", "tmpR", ",", "tmpI", ",", "ref", 
       ",", "refR", ",", "refI", ",", "msg", ",", "tempmsg", ",", "fbase", 
       ",", "fname", ",", 
       RowBox[{"tFunc", "=", 
        RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nN", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridN", " ", "=", " ", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ls", "=", 
       RowBox[{"meta", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fbase", "=", 
       RowBox[{"name", "<>", "\"\<_id\>\"", "<>", 
        RowBox[{"ToString", "[", "id", "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"msg", "=", 
       RowBox[{
       "\"\<Exporting \>\"", "<>", "name", "<>", 
        "\"\< Worland operator for N = \>\"", "<>", 
        RowBox[{"ToString", "[", "nN", "]"}], "<>", "\"\<, Ng = \>\"", " ", "<>", 
        RowBox[{"ToString", "[", "gridN", "]"}], "<>", "\"\<, l = \>\"", "<>", 
        RowBox[{"ToString", "[", "ls", "]"}], "<>", "\"\<...\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "mata", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"fname", "=", 
       RowBox[{"fbase", "<>", "\"\<_meta.dat\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"descr", "=", 
       RowBox[{"createMetadata", "[", 
        RowBox[{"nN", ",", "gridN", ",", "ls", ",", "tFunc"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}], 
         "]"}], ",", "descr"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "input", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"generateInData", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"inR", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"infunc", "[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", 
              RowBox[{"nN", "-", "1"}], ",", 
              RowBox[{"ls", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", "tFunc"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"inI", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"infunc", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", 
               RowBox[{"nN", "-", "1"}], ",", 
               RowBox[{"ls", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", "tFunc"}], "]"}]}], ",", 
            
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "nN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"in", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"inR", ",", "inI"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_in.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "in", ",", "\"\<Table\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Generate", " ", "reference", " ", "data"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"generateInData", "&&", "generateRefData"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"grid", " ", "=", " ", 
          RowBox[{"gfunc", "[", "gridN", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"tmpR", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"inR", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], 
               RowBox[{"bopfunc", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"ls", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"tmpI", "=", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"inI", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], 
               RowBox[{"bopfunc", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"ls", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", "grid"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "nN"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"grid", " ", "=", " ", 
          RowBox[{"gfunc", "[", "gridN", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"wgts", "=", " ", 
          SuperscriptBox["grid", "2"]}], ";", "\[IndentingNewLine]", 
         RowBox[{"refR", "=", 
          RowBox[{"Transpose", "[", 
           RowBox[{"ParallelTable", "[", 
            RowBox[{
             RowBox[{"tmpR", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", ";;"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"refI", "=", 
          RowBox[{"Transpose", "[", 
           RowBox[{"ParallelTable", "[", 
            RowBox[{
             RowBox[{"tmpI", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", ";;"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "@", "ls"}]}], "}"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ref", " ", "=", " ", 
          RowBox[{"Chop", "[", 
           RowBox[{
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{
               SuperscriptBox["refR", "2"], " ", "+", " ", 
               SuperscriptBox["refI", "2"]}], ",", "outprec"}], "]"}], ",", 
            SuperscriptBox["10", 
             RowBox[{
              RowBox[{"-", "mpprec"}], "+", "5"}]]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"fbase", "<>", "\"\<_ref.dat\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"dataroot", ",", "refdir", ",", "fname"}], "}"}], "]"}],
             "]"}], ",", "ref", ",", "\"\<Table\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"msg", ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\< Done(\>\"", "<>", 
             RowBox[{"DateString", "[", "]"}], "<>", "\"\<)\>\""}], ",", 
            RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}]}], "}"}], 
        "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "testRadialPower", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"truncationFunc", "->", "uniformTruncation"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.896235228149192*^9, 3.8962352287123613`*^9}, {
  3.896235273815054*^9, 3.896235294842388*^9}, {3.896235346871975*^9, 
  3.896235368084165*^9}, {3.896235419107732*^9, 3.896235419448848*^9}, {
  3.896235834446391*^9, 3.8962358659731216`*^9}, {3.89623589916757*^9, 
  3.8962359003147287`*^9}, {3.8962359465032043`*^9, 3.89623599625921*^9}, {
  3.896236052900803*^9, 3.8962360708384132`*^9}, {3.896236107186467*^9, 
  3.896236107788389*^9}, {3.896236153657103*^9, 3.896236155529098*^9}, {
  3.8962362606185627`*^9, 3.896236276934217*^9}, {3.8962363140788507`*^9, 
  3.8962363351288548`*^9}, {3.896236432351706*^9, 3.896236432509828*^9}, {
  3.896236637654203*^9, 3.896236663193335*^9}, {3.904788953893703*^9, 
  3.9047889939584093`*^9}, {3.904885416869505*^9, 3.904885423854122*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"cc3c338e-5e6c-41af-980d-8b2b5b09badb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateRadialPowers", "[", 
    RowBox[{"meta_", ",", "tId_", ",", "inSpec_", ",", "gfunc_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tFunc", "=", 
       RowBox[{"OptionValue", "[", "truncationFunc", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"configureGenerator", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "genIn", "]"}], ",", 
        RowBox[{"OptionValue", "[", "genRef", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testRadialPower", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "gfunc", ",", "Wnl", ",", 
        "\"\<Reductor/RadialPower\>\"", ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testRadialPower", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "gfunc", ",", "divrWnl", ",", 
        "\"\<Reductor/RadialPowerDivR1\>\"", ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testRadialPower", "[", 
       RowBox[{
       "meta", ",", "tId", ",", "inSpec", ",", "gfunc", ",", "divrdrWnl", 
        ",", "\"\<Reductor/RadialPowerDivR1D1R1\>\"", ",", 
        RowBox[{"truncationFunc", "->", "tFunc"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "generateRadialPowers", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"truncationFunc", "->", "uniformTruncation"}], ",", 
     RowBox[{"genIn", "->", "False"}], ",", 
     RowBox[{"genRef", "->", "False"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.858918214918326*^9, 3.858918219043927*^9}, {
   3.858918388292439*^9, 3.8589183918682137`*^9}, {3.858918517968472*^9, 
   3.8589186169603777`*^9}, {3.858933858454485*^9, 3.8589338739991302`*^9}, {
   3.858933911993498*^9, 3.8589339213830853`*^9}, {3.8589343623260727`*^9, 
   3.858934375821412*^9}, {3.876364814173636*^9, 3.876364815079277*^9}, {
   3.893238739341914*^9, 3.8932387483673773`*^9}, {3.896235389327318*^9, 
   3.896235447421391*^9}, {3.896235547406864*^9, 3.896235571074265*^9}, {
   3.896235664314152*^9, 3.896235696116726*^9}, {3.8962357752589293`*^9, 
   3.896235776445775*^9}, {3.9047890012551003`*^9, 3.904789037520854*^9}, 
   3.904816272232862*^9, {3.904906660599867*^9, 3.904906677799447*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"081fd491-f117-4628-a929-de249ea55b36"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxL", "=", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genTags", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setups", "=", 
   RowBox[{"{", 
    RowBox[{"uniformSetup", ",", "triangularSetup"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectra", "=", 
   RowBox[{"{", 
    RowBox[{
    "minSpectrum", ",", "maxSpectrum", ",", "unitSpectrum", ",", 
     "randSpectrum"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"it", "=", "1"}], ",", 
    RowBox[{"it", "<=", " ", 
     RowBox[{"Length", "[", "spectra", "]"}]}], ",", 
    RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"StringRepeat", "[", 
       RowBox[{"\"\<%\>\"", ",", "50"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<%%% Generating data with \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"spectra", "[", 
         RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\< spectrum\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", " ", 
      RowBox[{
       RowBox[{"is", " ", "=", " ", "1"}], ",", 
       RowBox[{"is", "<=", " ", 
        RowBox[{"Length", "[", "setups", "]"}]}], ",", 
       RowBox[{"is", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", "tFunc"}], "}"}], "=", 
         RowBox[{
          RowBox[{"setups", "[", 
           RowBox[{"[", "is", "]"}], "]"}], "[", "maxL", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"meta", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"nN", ",", "nR", ",", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3", ",", "8", ",", "maxL"}], "}"}]}],
           "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"id", "=", 
         RowBox[{
          RowBox[{"1000", 
           RowBox[{"(", 
            RowBox[{"is", "-", "1"}], ")"}]}], "+", 
          RowBox[{"(", 
           RowBox[{"it", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<--- Generating data with \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"setups", "[", 
            RowBox[{"[", "is", "]"}], "]"}], "]"}], "<>", 
          "\"\< truncation, id = \>\"", "<>", 
          RowBox[{"ToString", "[", "id", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"generateRadialPowers", "[", 
         RowBox[{"meta", ",", "id", ",", 
          RowBox[{"spectra", "[", 
           RowBox[{"[", "it", "]"}], "]"}], ",", "wgrid", ",", 
          RowBox[{"truncationFunc", "->", "tFunc"}], ",", " ", 
          RowBox[{"genIn", "->", 
           RowBox[{
            RowBox[{"genTags", "[", 
             RowBox[{"[", "is", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
          RowBox[{"genRef", "->", 
           RowBox[{
            RowBox[{"genTags", "[", 
             RowBox[{"[", "is", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "setups", ",", "it", ",", "spectra", ",", "is", ",", "k", ",", "maxL", ",", 
   "nN", ",", "nR", ",", "tFunc", ",", "meta", ",", "id", ",", "genTags"}], 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQXbP2+RdZibeOUeZGX0F03fYL/0H0ic3y/HJAWrpx
qSiINvpspgmivU8v1gXR83epWIFoFd0f9iD6hXWvM4i+V3rcA0S36L31AtEJ
ZdOCQPSx6pI4EM1hU5YGoh8YPSwC0bu2vK0E0XZvVFpANP+/lc9A9AnRlR9A
9MM36t9ANPfbzL8g2qWngE8eSMfZrxEH0SvLnuuDaD6rVxYg2mwdVyCIjggV
ANOJW36mgOiYW+ypIPqYqHgRmN6SXQ6i2zudmkD0pbksrSBaj/XgTUUgXZYn
cwtE35/26pAmkE45m3gYRLerbTgOot8pmJ8F0bMKjJdpA+kLHxaAadYlyU7L
gfTOf86uIBoARDGYWg==
  
  "],ExpressionUUID->"2e878039-dafb-4bd2-bfb8-26a8dec34ee1"]
},
WindowSize->{1472.516129032258, 872.516129032258},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.3 for Linux x86 (64-bit) (June 30, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b4a0dd8d-8a96-431c-a322-50aa4054eb68"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "energyTests"->{
  Cell[80309, 2050, 309, 5, 51, "Text",ExpressionUUID->"c00cd5e5-482e-4c2a-9fb1-a2d886a083e0",
   CellTags->"energyTests"]},
 "projectorTests"->{
  Cell[97813, 2451, 315, 5, 51, "Text",ExpressionUUID->"2c44427c-f971-40d1-adec-d45b533151f6",
   CellTags->"projectorTests"]},
 "integratorTests"->{
  Cell[127953, 3136, 319, 5, 51, "Text",ExpressionUUID->"0ad9ba67-2b78-4c60-9acb-0c95207bb425",
   CellTags->"integratorTests"]},
 "bfloopTests"->{
  Cell[205041, 4812, 324, 5, 51, "Text",ExpressionUUID->"2ccd7220-8c57-41e9-9913-b69599fe9d4d",
   CellTags->"bfloopTests"]},
 "powerTests"->{
  Cell[227127, 5349, 281, 4, 51, "Text",ExpressionUUID->"3f5b5c48-cddd-4117-833b-3a2a2ae518af",
   CellTags->"powerTests"]},
 "radialPowerTests"->{
  Cell[245985, 5806, 270, 4, 51, "Text",ExpressionUUID->"08d9c4eb-4bd2-4196-933d-b62dddc870c8",
   CellTags->"radialPowerTests"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"energyTests", 263707, 6233},
 {"projectorTests", 263853, 6236},
 {"integratorTests", 264003, 6239},
 {"bfloopTests", 264151, 6242},
 {"powerTests", 264294, 6245},
 {"radialPowerTests", 264442, 6248}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3715, 99, 432, "Input",ExpressionUUID->"4b518cb1-a97a-4280-bc3b-8ac8aeba4e78",
 InitializationCell->True],
Cell[4276, 121, 76030, 1927, 4833, "Input",ExpressionUUID->"80b9b190-58cd-4a17-a2ca-c826e95114c5",
 InitializationCell->True],
Cell[80309, 2050, 309, 5, 51, "Text",ExpressionUUID->"c00cd5e5-482e-4c2a-9fb1-a2d886a083e0",
 CellTags->"energyTests"],
Cell[80621, 2057, 10221, 223, 607, "Input",ExpressionUUID->"a3e8b1ff-bfff-44a2-9c5b-9061ba712f80"],
Cell[90845, 2282, 2517, 57, 172, "Input",ExpressionUUID->"ddfd4e30-31a2-4d4a-a48f-22d7b5376f38"],
Cell[93365, 2341, 4445, 108, 335, "Input",ExpressionUUID->"9f420c4d-d8f0-431e-9aa9-dbce070c91bb"],
Cell[97813, 2451, 315, 5, 51, "Text",ExpressionUUID->"2c44427c-f971-40d1-adec-d45b533151f6",
 CellTags->"projectorTests"],
Cell[98131, 2458, 10572, 242, 770, "Input",ExpressionUUID->"31fc3550-3bf0-43e2-8fee-f08bb62def68"],
Cell[108706, 2702, 6059, 132, 436, "Input",ExpressionUUID->"7c482c21-a52e-42d4-8b0f-e877f4cb018c"],
Cell[114768, 2836, 4566, 111, 335, "Input",ExpressionUUID->"d9617641-8504-45cc-8592-bc7e2e09b8ac"],
Cell[119337, 2949, 2615, 51, 131, "Input",ExpressionUUID->"27dfe1dc-3d74-4c2a-a018-c8cb4b4290fe"],
Cell[121955, 3002, 5995, 132, 405, "Input",ExpressionUUID->"f3cb6e60-f48f-43ce-aaf7-982cbc334e56"],
Cell[127953, 3136, 319, 5, 51, "Text",ExpressionUUID->"0ad9ba67-2b78-4c60-9acb-0c95207bb425",
 CellTags->"integratorTests"],
Cell[128275, 3143, 32040, 712, 1981, "Input",ExpressionUUID->"18223471-ae8c-407c-9b00-661aee82d843"],
Cell[160318, 3857, 9783, 198, 497, "Input",ExpressionUUID->"57e55014-0d3a-4fb7-ab1e-a418cc5fe50a"],
Cell[170104, 4057, 8477, 171, 599, "Input",ExpressionUUID->"5d3c1ee0-73c1-482d-a4f0-88b4125dc3df"],
Cell[178584, 4230, 5936, 116, 355, "Input",ExpressionUUID->"53442a51-a69e-42c5-ae3b-9fd045d0b1e6"],
Cell[184523, 4348, 4983, 119, 375, "Input",ExpressionUUID->"d756008d-cbc8-43f2-ba9e-8e6cd64364e7"],
Cell[189509, 4469, 4955, 117, 375, "Input",ExpressionUUID->"d09b2f8c-382b-4f86-a826-6e86884478ac"],
Cell[194467, 4588, 4520, 86, 213, "Input",ExpressionUUID->"ea17da8f-b901-4518-8f09-0fcb767961f5"],
Cell[198990, 4676, 6048, 134, 405, "Input",ExpressionUUID->"ac263cce-a9bc-42bd-8718-483836187663"],
Cell[205041, 4812, 324, 5, 51, "Text",ExpressionUUID->"2ccd7220-8c57-41e9-9913-b69599fe9d4d",
 CellTags->"bfloopTests"],
Cell[205368, 4819, 10987, 262, 749, "Input",ExpressionUUID->"dc793c0f-ebc4-411f-95d0-1b0c25ce64a6"],
Cell[216358, 5083, 1600, 39, 111, "Input",ExpressionUUID->"10124907-8060-4913-85ad-c0eb774cc608"],
Cell[217961, 5124, 4172, 108, 335, "Input",ExpressionUUID->"b6755347-60e0-4932-9643-4b720f15e767"],
Cell[222136, 5234, 4988, 113, 365, "Input",ExpressionUUID->"9a724d42-9548-44c4-92ac-235aa5adb495"],
Cell[227127, 5349, 281, 4, 51, "Text",ExpressionUUID->"3f5b5c48-cddd-4117-833b-3a2a2ae518af",
 CellTags->"powerTests"],
Cell[227411, 5355, 11426, 274, 749, "Input",ExpressionUUID->"490e411d-b2ea-4a70-b8b5-c5abe2c1d9d9"],
Cell[238840, 5631, 2906, 64, 172, "Input",ExpressionUUID->"0d7c3a51-26ab-4c3c-956c-8c7519dae069"],
Cell[241749, 5697, 4233, 107, 335, "Input",ExpressionUUID->"3a78ef28-4cf4-4cca-8d4c-d9d6275ed110"],
Cell[245985, 5806, 270, 4, 51, "Text",ExpressionUUID->"08d9c4eb-4bd2-4196-933d-b62dddc870c8",
 CellTags->"radialPowerTests"],
Cell[246258, 5812, 10249, 242, 729, "Input",ExpressionUUID->"cc3c338e-5e6c-41af-980d-8b2b5b09badb"],
Cell[256510, 6056, 2620, 55, 152, "Input",ExpressionUUID->"081fd491-f117-4628-a929-de249ea55b36"],
Cell[259133, 6113, 4202, 107, 335, "Input",ExpressionUUID->"2e878039-dafb-4bd2-bfb8-26a8dec34ee1"]
}
]
*)

