/**
 * @file @Operator@Test.cpp
 * @brief Tests for the Bessel @Operator@ SparseSM operator
 */

// System includes
//
#include <catch2/catch.hpp>

// Project includes
//
#include "QuICC/SparseSM/Bessel/@Operator@.hpp"
#include "QuICC/TestSuite/SparseSM/Bessel/TestArgs.hpp"
#include "QuICC/TestSuite/SparseSM/Bessel/Tester.hpp"

namespace currentts = ::QuICC::TestSuite::SparseSM::Bessel;

TEST_CASE("Error for @Operator@ operator of @BType@ type",
   "[@Operator@:@BType@:@type@]")
{

   // Set default arguments if required
   if (currentts::args().useDefault)
   {
      currentts::args().params = {0, 1, 2, 3, 4, 10, 11, 12, 13, 14};
   }

   Catch::StringMaker<double>::precision = 15;

   // Set type
   currentts::args().setType("@type@");

   REQUIRE(currentts::args().params.size() > 0);

   typedef ::QuICC::SparseSM::Bessel::@Operator@ Operator;
   typedef typename currentts::Tester<Operator> Tester;

   Tester tester("@Operator@.dat", "@BType@", currentts::args().dumpData);
   tester.setUlp(currentts::args().ulp);

   Tester::ParameterType params = {-1};

   for (auto id: currentts::args().params)
   {
      params.at(0) = id;
      tester.validate(params, currentts::args().type);
   }
}
