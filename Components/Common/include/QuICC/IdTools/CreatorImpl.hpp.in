/**
 * @file CreatorImpl.hpp
 * @brief @idID@ creator implementation
 */

#ifndef QUICC_@IDNS@_CREATORIMPL_HPP
#define QUICC_@IDNS@_CREATORIMPL_HPP

// System includes
//
#include <string>
#include <memory>

// External includes
//

// Project includes
//
#include "QuICC/@idNS@/ICreator.hpp"
#include "QuICC/@idNS@/@idID@.hpp"

namespace QuICC {

@cxxNS@

   /**
    * @brief @idID@ creator implementation
    */
   template <typename TName> class CreatorImpl: public ICreator
   {
      public:
         /**
          * @brief Constructor
          */
         CreatorImpl();

         /**
          * @brief Destructor
          */
         virtual ~CreatorImpl();

         /**
          * @brief Create @idID@ shared pointer
          */
         virtual Shared@idID@ create(@_idSIG@) const;
   };

   template <typename TName> CreatorImpl<TName>::CreatorImpl()
   {
   }

   template <typename TName> CreatorImpl<TName>::~CreatorImpl()
   {
   }

   template <typename TName> Shared@idID@ CreatorImpl<TName>::create(@_idSIG@) const
   {
      std::shared_ptr<TName> spName = std::make_shared<TName>(@idARG@);

      return spName;
   }

@cxxNS_@
}

#endif // QUICC_@IDNS@_CREATORIMPL_HPP
