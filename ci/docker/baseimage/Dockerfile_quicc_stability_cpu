# Build stage with Spack pre-installed and ready to be used
ARG CSCS_REGISTRY_PATH
FROM $CSCS_REGISTRY_PATH/ubuntu-spack:22.04-0.18.0 as builder

ARG NUM_PROCS=16
ARG TARGET=broadwell

# Install OS packages needed to build the software
RUN apt-get -yqq update && apt-get -yqq upgrade \
 && apt-get -yqq install less vim python3-dev python-is-python3 \
 && rm -rf /var/lib/apt/lists/*

# What we want to install and how we want to install it
# is specified in a manifest file (spack.yaml)
RUN mkdir /opt/spack-environment \
&&  (echo "spack:" \
&&   echo "  specs:" \
&&   echo "  - fftw" \
&&   echo "  - hdf5" \
&&   echo "  - cmake" \
&&   echo "  - openblas" \
&&   echo "  - boost@1.78.0" \
&&   echo "  - py-scipy" \
&&   echo "  - reframe" \
&&   echo "  - kokkos-kernels" \
&&   echo "  - mpich@3.1.4 netmod=tcp device=ch3" \
&&   echo "  - petsc +complex +mumps" \
&&   echo "  - slepc" \
&&   echo "  - py-mpi4py" \
&&   echo "  - py-petsc4py" \
&&   echo "  - py-slepc4py" \
&&   echo "  - py-h5py" \
&&   echo "  - py-tables" \
&&   echo "  - py-matplotlib" \
&&   echo "  packages:" \
&&   echo "    all:" \
&&   echo "      variants: +openmp +mpi build_type=Release target=$TARGET" \
&&   echo "      providers:" \
&&   echo "        mpi:" \
&&   echo "        - mpich@3.1.4" \
&&   echo "  concretizer:" \
&&   echo "    unify: true" \
&&   echo "  config:" \
&&   echo "    install_tree: /opt/software" \
&&   echo "    build_jobs: $NUM_PROCS" \
&&   echo "  view: /opt/view") > /opt/spack-environment/spack.yaml

# Install the software, remove unnecessary deps
RUN cd /opt/spack-environment && spack env activate . \
  && spack -e . concretize \
  && spack -e . env depfile > Makefile \
  && make -j$NUM_PROCS SPACK_COLOR=always --output-sync=recurse \
  && spack gc -y


# Strip all the binaries
RUN find -L /opt/view/* -type f -exec readlink -f '{}' \; | \
    xargs file -i | \
    grep 'charset=binary' | \
    grep 'x-executable\|x-archive\|x-sharedlib' | \
    awk -F: '{print $1}' | xargs strip -s || true

# Modifications to the environment that are necessary to run
RUN cd /opt/spack-environment && \
    spack env activate --sh -d . >> /etc/profile.d/z10_spack_environment.sh && \
    echo 'export CPATH=/opt/view/include:$CPATH' >> /etc/profile.d/z10_spack_environment.sh


# Bare OS image to run the installed executables
FROM docker.io/ubuntu:22.04

COPY --from=builder /opt/spack-environment /opt/spack-environment
COPY --from=builder /opt/software /opt/software
COPY --from=builder /opt/._view /opt/._view
COPY --from=builder /etc/profile.d/z10_spack_environment.sh /etc/profile.d/z10_spack_environment.sh

RUN ln -s /opt/._view/* /opt/view

RUN apt-get -yqq update && apt-get -yqq upgrade \
 && apt-get -yqq install build-essential git gcc g++ gfortran vim less \
 && rm -rf /var/lib/apt/lists/*

RUN (echo "/opt/view/lib" \
&&   echo "/opt/view/lib64") > /etc/ld.so.conf.d/spack.conf \
&& ldconfig

ENTRYPOINT ["/bin/bash", "--rcfile", "/etc/profile", "-l", "-c"]
CMD ["/bin/bash"]
SHELL ["/bin/bash", "--rcfile", "/etc/profile", "-l", "-c"]
