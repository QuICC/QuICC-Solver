.test-lib:
  variables:
    TEST_NCPU: 'grep processor /proc/cpuinfo | wc -l'
  script:
    - pwd
    # the tests are not installed, so we need to run them from the build directory
    - cd /QuICC.src/build
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R ^Memory
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R ^View
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R PolynomialQuadratureTests_
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R ^Jacobi
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformFourierTests_Complex_.*_integrator"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformFourierTests_Complex_.*_projector"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformFourierTests_Mixed_.*_integrator"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformFourierTests_Mixed_.*_projector"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformFourierTests_Mixed_.*_bfloop"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformChebyshevTests_.*_integrator"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformChebyshevTests_.*_projector"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformChebyshevTests_.*_bfloop"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformChebyshevTests_.*_reductor"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformWorlandTests_.*"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R ProfilerTest
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R TrackerTest
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformALegendreTests_Poly_.*_integrator_ulp"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformALegendreTests_Poly_.*_integrator_id"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformALegendreTests_Poly_.*_projector_ulp"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformALegendreTests_Poly_.*_projector_id"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "^TransformALegendreTests_Poly_.*_bfloop_ulp"
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R SparseSMWorlandTests_
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R SparseSMChebyshevLinearMapTests_
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R SparseSMChebyshevLinearMapBoundaryTests_
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R SparseSMChebyshevLinearMapStencilTests_
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R FrameworkLoadSplitterTests_
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R FrameworkCommunicatorTests_
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R FrameworkTransformCoordinatorTests_
    - ctest -j $TEST_NCPU --no-tests=error --output-on-failure -R "PyQuICCTests"

.time-lib-cpu:
  script:
    - pwd
    - export QUICC_ROOT=/QuICC.src
    - export PYTHONPATH=$QUICC_ROOT/ci/reframe:$PYTHONPATH
    - reframe -c $QUICC_ROOT/ci/reframe/quicc_library_cpu.py -r -S quicc_root=$QUICC_ROOT --performance-report --force-local --exec-policy=serial --keep-stage-files

.time-lib-gpu:
  script:
    - pwd
    - export QUICC_ROOT=/QuICC.src
    - export PYTHONPATH=$QUICC_ROOT/ci/reframe:$PYTHONPATH
    - reframe -c $QUICC_ROOT/ci/reframe/quicc_library_gpu.py -r -S quicc_root=$QUICC_ROOT --performance-report --force-local --exec-policy=serial --keep-stage-files
